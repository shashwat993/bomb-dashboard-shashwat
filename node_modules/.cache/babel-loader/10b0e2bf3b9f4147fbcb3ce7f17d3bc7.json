{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useXbombBalance = () => {\n  const {\n    slowRefresh\n  } = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        const rate = await bombFinance.getXbombExchange();\n        setBalance(rate);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    fetchBalance();\n  }, [setBalance, slowRefresh, bombFinance]);\n  return balance;\n};\n\nexport default useXbombBalance;","map":{"version":3,"sources":["/home/shashwat/Projects/Dyeus/src/hooks/useXbombBalance.ts"],"names":["useEffect","useState","BigNumber","useBombFinance","useRefresh","useXbombBalance","slowRefresh","balance","setBalance","from","bombFinance","fetchBalance","rate","getXbombExchange","e","console","error"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAgBF,UAAU,EAAhC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACC,SAAS,CAACO,IAAV,CAAe,CAAf,CAAD,CAAtC;AACA,QAAMC,WAAW,GAAGP,cAAc,EAAlC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,YAAf,GAA8B;AAC5B,UAAI;AACF,cAAMC,IAAI,GAAG,MAAMF,WAAW,CAACG,gBAAZ,EAAnB;AACAL,QAAAA,UAAU,CAACI,IAAD,CAAV;AACD,OAHD,CAGE,OAAOE,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;;AAEDH,IAAAA,YAAY;AACb,GAXQ,EAWN,CAACH,UAAD,EAAaF,WAAb,EAA0BI,WAA1B,CAXM,CAAT;AAYA,SAAOH,OAAP;AACD,CAjBD;;AAmBA,eAAeF,eAAf","sourcesContent":["import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useXbombBalance = () => {\n  const {slowRefresh} = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        const rate = await bombFinance.getXbombExchange();\n        setBalance(rate);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    fetchBalance();\n  }, [setBalance, slowRefresh, bombFinance]);\n  return balance;\n};\n\nexport default useXbombBalance;\n"]},"metadata":{},"sourceType":"module"}