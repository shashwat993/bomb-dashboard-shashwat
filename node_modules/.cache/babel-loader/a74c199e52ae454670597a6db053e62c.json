{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport useBombFinance from './useBombFinance';\nimport config from '../config';\nimport { BigNumber } from 'ethers';\n\nconst useCashPriceInLastTWAP = () => {\n  const [price, setPrice] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const fetchCashPrice = useCallback(async () => {\n    setPrice(await bombFinance.getBombPriceInLastTWAP());\n  }, [bombFinance]);\n  useEffect(() => {\n    fetchCashPrice().catch(err => console.error(`Failed to fetch BOMB price: ${err.stack}`));\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\n    return () => clearInterval(refreshInterval);\n  }, [setPrice, bombFinance, fetchCashPrice]);\n  return price;\n};\n\nexport default useCashPriceInLastTWAP;","map":{"version":3,"sources":["/home/shashwat/Projects/Dyeus/src/hooks/useCashPriceInLastTWAP.ts"],"names":["useCallback","useEffect","useState","useBombFinance","config","BigNumber","useCashPriceInLastTWAP","price","setPrice","from","bombFinance","fetchCashPrice","getBombPriceInLastTWAP","catch","err","console","error","stack","refreshInterval","setInterval","clearInterval"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,SAAR,QAAwB,QAAxB;;AAEA,MAAMC,sBAAsB,GAAG,MAAM;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAYG,SAAS,CAACI,IAAV,CAAe,CAAf,CAAZ,CAAlC;AACA,QAAMC,WAAW,GAAGP,cAAc,EAAlC;AAEA,QAAMQ,cAAc,GAAGX,WAAW,CAAC,YAAY;AAC7CQ,IAAAA,QAAQ,CAAC,MAAME,WAAW,CAACE,sBAAZ,EAAP,CAAR;AACD,GAFiC,EAE/B,CAACF,WAAD,CAF+B,CAAlC;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc,GAAGE,KAAjB,CAAwBC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAe,+BAA8BF,GAAG,CAACG,KAAM,EAAvD,CAAhC;AACA,UAAMC,eAAe,GAAGC,WAAW,CAACR,cAAD,EAAiBP,MAAM,CAACc,eAAxB,CAAnC;AACA,WAAO,MAAME,aAAa,CAACF,eAAD,CAA1B;AACD,GAJQ,EAIN,CAACV,QAAD,EAAWE,WAAX,EAAwBC,cAAxB,CAJM,CAAT;AAMA,SAAOJ,KAAP;AACD,CAfD;;AAiBA,eAAeD,sBAAf","sourcesContent":["import {useCallback, useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport config from '../config';\nimport {BigNumber} from 'ethers';\n\nconst useCashPriceInLastTWAP = () => {\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n\n  const fetchCashPrice = useCallback(async () => {\n    setPrice(await bombFinance.getBombPriceInLastTWAP());\n  }, [bombFinance]);\n\n  useEffect(() => {\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch BOMB price: ${err.stack}`));\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\n    return () => clearInterval(refreshInterval);\n  }, [setPrice, bombFinance, fetchCashPrice]);\n\n  return price;\n};\n\nexport default useCashPriceInLastTWAP;\n"]},"metadata":{},"sourceType":"module"}