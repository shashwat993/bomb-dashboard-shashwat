{"ast":null,"code":"import { number, node, objectOf, object } from 'prop-types';\nimport { useContext, useMemo, useState, useRef, useCallback, useEffect, createElement, createContext } from 'react';\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport JSBI from 'jsbi';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar runtime_1 = createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  var runtime = function (exports) {\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var undefined$1; // More compressible than void 0.\n\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n    function define(obj, key, value) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n      return obj[key];\n    }\n\n    try {\n      // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n      define({}, \"\");\n    } catch (err) {\n      define = function (obj, key, value) {\n        return obj[key] = value;\n      };\n    }\n\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n      var generator = Object.create(protoGenerator.prototype);\n      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n      // .throw, and .return methods.\n\n      generator._invoke = makeInvokeMethod(innerFn, self, context);\n      return generator;\n    }\n\n    exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n    // record like context.tryEntries[i].completion. This interface could\n    // have been (and was previously) designed to take a closure to be\n    // invoked without arguments, but in all the cases we care about we\n    // already have an existing method we want to call, so there's no need\n    // to create a new function object. We can even get away with assuming\n    // the method takes exactly one argument, since that happens to be true\n    // in every case, so we don't have to touch the arguments object. The\n    // only additional allocation required is the completion record, which\n    // has a stable shape and so hopefully should be cheap to allocate.\n\n    function tryCatch(fn, obj, arg) {\n      try {\n        return {\n          type: \"normal\",\n          arg: fn.call(obj, arg)\n        };\n      } catch (err) {\n        return {\n          type: \"throw\",\n          arg: err\n        };\n      }\n    }\n\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n    // breaking out of the dispatch switch statement.\n\n    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n    // .constructor.prototype properties for functions that return Generator\n    // objects. For full spec compliance, you may wish to configure your\n    // minifier not to mangle the names of these two functions.\n\n    function Generator() {}\n\n    function GeneratorFunction() {}\n\n    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n    // don't natively support it.\n\n\n    var IteratorPrototype = {};\n\n    IteratorPrototype[iteratorSymbol] = function () {\n      return this;\n    };\n\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n      // This environment has a native %IteratorPrototype%; use it instead\n      // of the polyfill.\n      IteratorPrototype = NativeIteratorPrototype;\n    }\n\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n    GeneratorFunctionPrototype.constructor = GeneratorFunction;\n    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n    // Iterator interface in terms of a single ._invoke method.\n\n    function defineIteratorMethods(prototype) {\n      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n        define(prototype, method, function (arg) {\n          return this._invoke(method, arg);\n        });\n      });\n    }\n\n    exports.isGeneratorFunction = function (genFun) {\n      var ctor = typeof genFun === \"function\" && genFun.constructor;\n      return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n      // do is to check its .name property.\n      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n\n    exports.mark = function (genFun) {\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n      } else {\n        genFun.__proto__ = GeneratorFunctionPrototype;\n        define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n      }\n\n      genFun.prototype = Object.create(Gp);\n      return genFun;\n    }; // Within the body of any async function, `await x` is transformed to\n    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n    // meant to be awaited.\n\n\n    exports.awrap = function (arg) {\n      return {\n        __await: arg\n      };\n    };\n\n    function AsyncIterator(generator, PromiseImpl) {\n      function invoke(method, arg, resolve, reject) {\n        var record = tryCatch(generator[method], generator, arg);\n\n        if (record.type === \"throw\") {\n          reject(record.arg);\n        } else {\n          var result = record.arg;\n          var value = result.value;\n\n          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n            return PromiseImpl.resolve(value.__await).then(function (value) {\n              invoke(\"next\", value, resolve, reject);\n            }, function (err) {\n              invoke(\"throw\", err, resolve, reject);\n            });\n          }\n\n          return PromiseImpl.resolve(value).then(function (unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration.\n            result.value = unwrapped;\n            resolve(result);\n          }, function (error) {\n            // If a rejected Promise was yielded, throw the rejection back\n            // into the async generator function so it can be handled there.\n            return invoke(\"throw\", error, resolve, reject);\n          });\n        }\n      }\n\n      var previousPromise;\n\n      function enqueue(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n\n        return previousPromise = // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n        // invocations of the iterator.\n        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      } // Define the unified helper method that is used to implement .next,\n      // .throw, and .return (see defineIteratorMethods).\n\n\n      this._invoke = enqueue;\n    }\n\n    defineIteratorMethods(AsyncIterator.prototype);\n\n    AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n      return this;\n    };\n\n    exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n    // AsyncIterator objects; they just return a Promise for the value of\n    // the final result produced by the iterator.\n\n    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n      if (PromiseImpl === void 0) PromiseImpl = Promise;\n      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function (result) {\n        return result.done ? result.value : iter.next();\n      });\n    };\n\n    function makeInvokeMethod(innerFn, self, context) {\n      var state = GenStateSuspendedStart;\n      return function invoke(method, arg) {\n        if (state === GenStateExecuting) {\n          throw new Error(\"Generator is already running\");\n        }\n\n        if (state === GenStateCompleted) {\n          if (method === \"throw\") {\n            throw arg;\n          } // Be forgiving, per 25.3.3.3.3 of the spec:\n          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n          return doneResult();\n        }\n\n        context.method = method;\n        context.arg = arg;\n\n        while (true) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (context.method === \"next\") {\n            // Setting context._sent for legacy support of Babel's\n            // function.sent implementation.\n            context.sent = context._sent = context.arg;\n          } else if (context.method === \"throw\") {\n            if (state === GenStateSuspendedStart) {\n              state = GenStateCompleted;\n              throw context.arg;\n            }\n\n            context.dispatchException(context.arg);\n          } else if (context.method === \"return\") {\n            context.abrupt(\"return\", context.arg);\n          }\n\n          state = GenStateExecuting;\n          var record = tryCatch(innerFn, self, context);\n\n          if (record.type === \"normal\") {\n            // If an exception is thrown from innerFn, we leave state ===\n            // GenStateExecuting and loop back for another invocation.\n            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n            if (record.arg === ContinueSentinel) {\n              continue;\n            }\n\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          } else if (record.type === \"throw\") {\n            state = GenStateCompleted; // Dispatch the exception by looping back around to the\n            // context.dispatchException(context.arg) call above.\n\n            context.method = \"throw\";\n            context.arg = record.arg;\n          }\n        }\n      };\n    } // Call delegate.iterator[context.method](context.arg) and handle the\n    // result, either by returning a { value, done } result from the\n    // delegate iterator, or by modifying context.method and context.arg,\n    // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n    function maybeInvokeDelegate(delegate, context) {\n      var method = delegate.iterator[context.method];\n\n      if (method === undefined$1) {\n        // A .throw or .return when the delegate iterator has no .throw\n        // method always terminates the yield* loop.\n        context.delegate = null;\n\n        if (context.method === \"throw\") {\n          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n          if (delegate.iterator[\"return\"]) {\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            context.method = \"return\";\n            context.arg = undefined$1;\n            maybeInvokeDelegate(delegate, context);\n\n            if (context.method === \"throw\") {\n              // If maybeInvokeDelegate(context) changed context.method from\n              // \"return\" to \"throw\", let that override the TypeError below.\n              return ContinueSentinel;\n            }\n          }\n\n          context.method = \"throw\";\n          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n\n        return ContinueSentinel;\n      }\n\n      var record = tryCatch(method, delegate.iterator, context.arg);\n\n      if (record.type === \"throw\") {\n        context.method = \"throw\";\n        context.arg = record.arg;\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      var info = record.arg;\n\n      if (!info) {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"iterator result is not an object\");\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      if (info.done) {\n        // Assign the result of the finished delegate to the temporary\n        // variable specified by delegate.resultName (see delegateYield).\n        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n        context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n        // exception, let the outer generator proceed normally. If\n        // context.method was \"next\", forget context.arg since it has been\n        // \"consumed\" by the delegate iterator. If context.method was\n        // \"return\", allow the original .return call to continue in the\n        // outer generator.\n\n        if (context.method !== \"return\") {\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n      } else {\n        // Re-yield the result returned by the delegate method.\n        return info;\n      } // The delegate iterator is finished, so forget it and continue with\n      // the outer generator.\n\n\n      context.delegate = null;\n      return ContinueSentinel;\n    } // Define Generator.prototype.{next,throw,return} in terms of the\n    // unified ._invoke helper method.\n\n\n    defineIteratorMethods(Gp);\n    define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n    // @@iterator function is called on it. Some browsers' implementations of the\n    // iterator prototype chain incorrectly implement this, causing the Generator\n    // object to not be returned from this call. This ensures that doesn't happen.\n    // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n    Gp[iteratorSymbol] = function () {\n      return this;\n    };\n\n    Gp.toString = function () {\n      return \"[object Generator]\";\n    };\n\n    function pushTryEntry(locs) {\n      var entry = {\n        tryLoc: locs[0]\n      };\n\n      if (1 in locs) {\n        entry.catchLoc = locs[1];\n      }\n\n      if (2 in locs) {\n        entry.finallyLoc = locs[2];\n        entry.afterLoc = locs[3];\n      }\n\n      this.tryEntries.push(entry);\n    }\n\n    function resetTryEntry(entry) {\n      var record = entry.completion || {};\n      record.type = \"normal\";\n      delete record.arg;\n      entry.completion = record;\n    }\n\n    function Context(tryLocsList) {\n      // The root entry object (effectively a try statement without a catch\n      // or a finally block) gives us a place to store values thrown from\n      // locations where there is no enclosing try statement.\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }];\n      tryLocsList.forEach(pushTryEntry, this);\n      this.reset(true);\n    }\n\n    exports.keys = function (object) {\n      var keys = [];\n\n      for (var key in object) {\n        keys.push(key);\n      }\n\n      keys.reverse(); // Rather than returning an object with a next method, we keep\n      // things simple and return the next function itself.\n\n      return function next() {\n        while (keys.length) {\n          var key = keys.pop();\n\n          if (key in object) {\n            next.value = key;\n            next.done = false;\n            return next;\n          }\n        } // To avoid creating an additional object, we just hang the .value\n        // and .done properties off the next function object itself. This\n        // also ensures that the minifier will not anonymize the function.\n\n\n        next.done = true;\n        return next;\n      };\n    };\n\n    function values(iterable) {\n      if (iterable) {\n        var iteratorMethod = iterable[iteratorSymbol];\n\n        if (iteratorMethod) {\n          return iteratorMethod.call(iterable);\n        }\n\n        if (typeof iterable.next === \"function\") {\n          return iterable;\n        }\n\n        if (!isNaN(iterable.length)) {\n          var i = -1,\n              next = function next() {\n            while (++i < iterable.length) {\n              if (hasOwn.call(iterable, i)) {\n                next.value = iterable[i];\n                next.done = false;\n                return next;\n              }\n            }\n\n            next.value = undefined$1;\n            next.done = true;\n            return next;\n          };\n\n          return next.next = next;\n        }\n      } // Return an iterator with no values.\n\n\n      return {\n        next: doneResult\n      };\n    }\n\n    exports.values = values;\n\n    function doneResult() {\n      return {\n        value: undefined$1,\n        done: true\n      };\n    }\n\n    Context.prototype = {\n      constructor: Context,\n      reset: function (skipTempReset) {\n        this.prev = 0;\n        this.next = 0; // Resetting context._sent for legacy support of Babel's\n        // function.sent implementation.\n\n        this.sent = this._sent = undefined$1;\n        this.done = false;\n        this.delegate = null;\n        this.method = \"next\";\n        this.arg = undefined$1;\n        this.tryEntries.forEach(resetTryEntry);\n\n        if (!skipTempReset) {\n          for (var name in this) {\n            // Not sure about the optimal order of these conditions:\n            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n              this[name] = undefined$1;\n            }\n          }\n        }\n      },\n      stop: function () {\n        this.done = true;\n        var rootEntry = this.tryEntries[0];\n        var rootRecord = rootEntry.completion;\n\n        if (rootRecord.type === \"throw\") {\n          throw rootRecord.arg;\n        }\n\n        return this.rval;\n      },\n      dispatchException: function (exception) {\n        if (this.done) {\n          throw exception;\n        }\n\n        var context = this;\n\n        function handle(loc, caught) {\n          record.type = \"throw\";\n          record.arg = exception;\n          context.next = loc;\n\n          if (caught) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            context.method = \"next\";\n            context.arg = undefined$1;\n          }\n\n          return !!caught;\n        }\n\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          var record = entry.completion;\n\n          if (entry.tryLoc === \"root\") {\n            // Exception thrown outside of any try block that could handle\n            // it, so set the completion value of the entire function to\n            // throw the exception.\n            return handle(\"end\");\n          }\n\n          if (entry.tryLoc <= this.prev) {\n            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n            if (hasCatch && hasFinally) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              } else if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else if (hasCatch) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              }\n            } else if (hasFinally) {\n              if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else {\n              throw new Error(\"try statement without catch or finally\");\n            }\n          }\n        }\n      },\n      abrupt: function (type, arg) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n            var finallyEntry = entry;\n            break;\n          }\n        }\n\n        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n          // Ignore the finally entry if control is not jumping to a\n          // location outside the try/catch block.\n          finallyEntry = null;\n        }\n\n        var record = finallyEntry ? finallyEntry.completion : {};\n        record.type = type;\n        record.arg = arg;\n\n        if (finallyEntry) {\n          this.method = \"next\";\n          this.next = finallyEntry.finallyLoc;\n          return ContinueSentinel;\n        }\n\n        return this.complete(record);\n      },\n      complete: function (record, afterLoc) {\n        if (record.type === \"throw\") {\n          throw record.arg;\n        }\n\n        if (record.type === \"break\" || record.type === \"continue\") {\n          this.next = record.arg;\n        } else if (record.type === \"return\") {\n          this.rval = this.arg = record.arg;\n          this.method = \"return\";\n          this.next = \"end\";\n        } else if (record.type === \"normal\" && afterLoc) {\n          this.next = afterLoc;\n        }\n\n        return ContinueSentinel;\n      },\n      finish: function (finallyLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.finallyLoc === finallyLoc) {\n            this.complete(entry.completion, entry.afterLoc);\n            resetTryEntry(entry);\n            return ContinueSentinel;\n          }\n        }\n      },\n      \"catch\": function (tryLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc === tryLoc) {\n            var record = entry.completion;\n\n            if (record.type === \"throw\") {\n              var thrown = record.arg;\n              resetTryEntry(entry);\n            }\n\n            return thrown;\n          }\n        } // The context.catch method must only be called with a location\n        // argument that corresponds to a known catch block.\n\n\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function (iterable, resultName, nextLoc) {\n        this.delegate = {\n          iterator: values(iterable),\n          resultName: resultName,\n          nextLoc: nextLoc\n        };\n\n        if (this.method === \"next\") {\n          // Deliberately forget the last sent value so that we don't\n          // accidentally pass it on to the delegate.\n          this.arg = undefined$1;\n        }\n\n        return ContinueSentinel;\n      }\n    }; // Regardless of whether this script is executing as a CommonJS module\n    // or not, return the runtime object so that we can declare the variable\n    // regeneratorRuntime in the outer scope, which allows this module to be\n    // injected easily by `bin/regenerator --include-runtime script.js`.\n\n    return exports;\n  }( // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  module.exports);\n\n  try {\n    regeneratorRuntime = runtime;\n  } catch (accidentalStrictMode) {\n    // This module should not be running in strict mode, so the above\n    // assignment should always work unless something is misconfigured. Just\n    // in case runtime.js accidentally runs in strict mode, we can escape\n    // strict mode using a global Function call. This could conceivably fail\n    // if a Content Security Policy forbids using Function, but in that case\n    // the proper solution is to fix the accidental strict mode problem. If\n    // you've misconfigured your bundler to force strict mode and applied a\n    // CSP to forbid Function, and you're not willing to fix either of those\n    // problems, please detail your unique predicament in a GitHub issue.\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n});\nvar KNOWN_CHAINS = /*#__PURE__*/new Map([[1, 'Mainnet'], [2, 'Expanse'], [3, 'Ropsten'], [4, 'Rinkeby'], [5, 'Goerli'], [8, 'Ubiq'], [42, 'Kovan'], [100, 'xDai'], // This chainId is arbitrary and can be changed,\n// but by convention this is the number used\n// for local chains (ganache, buidler, etc) by default.\n[1337, 'Local'], [5777, 'Ganache']]);\n\nfunction getNetworkName(chainId) {\n  return KNOWN_CHAINS.get(chainId) || 'Unknown';\n}\n\nfunction isUnwrappedRpcResult(response) {\n  return typeof response === 'object' && response !== null && 'jsonrpc' in response;\n}\n\nfunction rpcResult(response) {\n  // Some providers don’t wrap the response\n  if (isUnwrappedRpcResult(response)) {\n    if (response.error) {\n      throw new Error(response.error);\n    }\n\n    return response.result || null;\n  }\n\n  return response || null;\n}\n\nfunction ethereumRequest(_x, _x2, _x3) {\n  return _ethereumRequest.apply(this, arguments);\n}\n\nfunction _ethereumRequest() {\n  _ethereumRequest = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2(ethereum, method, params) {\n    return runtime_1.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!ethereum.request) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", ethereum.request({\n              method: method,\n              params: params\n            }).then(rpcResult));\n\n          case 2:\n            if (!(ethereum.sendAsync && ethereum.selectedAddress)) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n              ethereum.sendAsync({\n                method: method,\n                params: params,\n                from: ethereum.selectedAddress,\n                jsonrpc: '2.0',\n                id: 0\n              }, function (err, result) {\n                if (err) {\n                  reject(err);\n                } else {\n                  resolve(result);\n                }\n              });\n            }).then(rpcResult));\n\n          case 4:\n            if (!ethereum.send) {\n              _context2.next = 6;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", ethereum.send(method, params).then(rpcResult));\n\n          case 6:\n            throw new Error('The Ethereum provider doesn’t seem to provide a request method.');\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _ethereumRequest.apply(this, arguments);\n}\n\nfunction getAccountIsContract(_x4, _x5) {\n  return _getAccountIsContract.apply(this, arguments);\n}\n\nfunction _getAccountIsContract() {\n  _getAccountIsContract = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee3(ethereum, account) {\n    var code;\n    return runtime_1.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return ethereumRequest(ethereum, 'eth_getCode', [account]);\n\n          case 3:\n            code = _context3.sent;\n            return _context3.abrupt(\"return\", code !== '0x');\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", false);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 7]]);\n  }));\n  return _getAccountIsContract.apply(this, arguments);\n}\n\nfunction getAccountBalance(_x6, _x7) {\n  return _getAccountBalance.apply(this, arguments);\n}\n\nfunction _getAccountBalance() {\n  _getAccountBalance = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee4(ethereum, account) {\n    return runtime_1.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", ethereumRequest(ethereum, 'eth_getBalance', [account, 'latest']));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getAccountBalance.apply(this, arguments);\n}\n\nfunction getBlockNumber(_x8) {\n  return _getBlockNumber.apply(this, arguments);\n}\n\nfunction _getBlockNumber() {\n  _getBlockNumber = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee5(ethereum) {\n    return runtime_1.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", ethereumRequest(ethereum, 'eth_blockNumber', []));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getBlockNumber.apply(this, arguments);\n}\n\nfunction pollEvery(fn, delay) {\n  var timer; // can be TimeOut (Node) or number (web)\n\n  var stop = false;\n\n  var poll = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(request, onResult) {\n      var result;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return request();\n\n            case 2:\n              result = _context.sent;\n\n              if (!stop) {\n                onResult(result);\n                timer = setTimeout(poll.bind(null, request, onResult), delay);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function poll(_x9, _x10) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return function () {\n    var _fn = fn.apply(void 0, arguments),\n        request = _fn.request,\n        onResult = _fn.onResult;\n\n    stop = false;\n    poll(request, onResult);\n    return function () {\n      stop = true;\n      clearTimeout(timer);\n    };\n  };\n}\n\nvar ChainUnsupportedError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(ChainUnsupportedError, _Error);\n\n  function ChainUnsupportedError(chainId, expectedChainId) {\n    var _this;\n\n    for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      params[_key - 2] = arguments[_key];\n    }\n\n    _this = _Error.call.apply(_Error, [this].concat(params)) || this;\n    _this.name = 'ChainUnsupportedError';\n    _this.message = \"Unsupported chain: \" + getNetworkName(chainId) + (chainId === -1 ? '' : \" (Chain ID: \" + chainId + \")\") + \". \" + (\"Required chain: \" + getNetworkName(expectedChainId) + \" (Chain ID: \" + expectedChainId + \").\");\n    return _this;\n  }\n\n  return ChainUnsupportedError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar ConnectorUnsupportedError = /*#__PURE__*/function (_Error2) {\n  _inheritsLoose(ConnectorUnsupportedError, _Error2);\n\n  function ConnectorUnsupportedError(connectorId) {\n    var _this2;\n\n    for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      params[_key2 - 1] = arguments[_key2];\n    }\n\n    _this2 = _Error2.call.apply(_Error2, [this].concat(params)) || this;\n    _this2.name = 'ConnectorUnsupportedError';\n    _this2.message = \"Unsupported connector: \" + connectorId + \".\";\n    return _this2;\n  }\n\n  return ConnectorUnsupportedError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar ConnectionRejectedError = /*#__PURE__*/function (_Error3) {\n  _inheritsLoose(ConnectionRejectedError, _Error3);\n\n  function ConnectionRejectedError() {\n    var _this3;\n\n    for (var _len3 = arguments.length, params = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      params[_key3] = arguments[_key3];\n    }\n\n    _this3 = _Error3.call.apply(_Error3, [this].concat(params)) || this;\n    _this3.name = 'ConnectionRejectedError';\n    _this3.message = \"The activation has been rejected by the provider.\";\n    return _this3;\n  }\n\n  return ConnectionRejectedError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar ConnectorConfigError = /*#__PURE__*/function (_Error4) {\n  _inheritsLoose(ConnectorConfigError, _Error4);\n\n  function ConnectorConfigError() {\n    var _this4;\n\n    for (var _len4 = arguments.length, params = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      params[_key4] = arguments[_key4];\n    }\n\n    _this4 = _Error4.call.apply(_Error4, [this].concat(params)) || this;\n    _this4.name = 'ConnectorConfigError';\n    return _this4;\n  }\n\n  return ConnectorConfigError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction init() {\n  return _init.apply(this, arguments);\n}\n\nfunction _init() {\n  _init = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n    var _yield$import, FortmaticConnector;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('@web3-react/fortmatic-connector');\n\n          case 2:\n            _yield$import = _context.sent;\n            FortmaticConnector = _yield$import.FortmaticConnector;\n            return _context.abrupt(\"return\", {\n              web3ReactConnector: function web3ReactConnector(_ref) {\n                var chainId = _ref.chainId,\n                    apiKey = _ref.apiKey;\n\n                if (!apiKey) {\n                  throw new ConnectorConfigError('The Fortmatic connector requires apiKey to be set.');\n                }\n\n                return new FortmaticConnector({\n                  apiKey: apiKey,\n                  chainId: chainId\n                });\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _init.apply(this, arguments);\n}\n\nfunction init$1() {\n  return _init$1.apply(this, arguments);\n}\n\nfunction _init$1() {\n  _init$1 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n    var _yield$import, FrameConnector, UserRejectedRequestError;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('@web3-react/frame-connector');\n\n          case 2:\n            _yield$import = _context.sent;\n            FrameConnector = _yield$import.FrameConnector;\n            UserRejectedRequestError = _yield$import.UserRejectedRequestError;\n            return _context.abrupt(\"return\", {\n              web3ReactConnector: function web3ReactConnector(_ref) {\n                var chainId = _ref.chainId;\n                return new FrameConnector({\n                  supportedChainIds: [chainId]\n                });\n              },\n              handleActivationError: function handleActivationError(err) {\n                if (err instanceof UserRejectedRequestError) {\n                  return new ConnectionRejectedError();\n                }\n\n                if (err.message.startsWith('JSON.parse')) {\n                  return new Error('There seems to be an issue when trying to connect to Frame.');\n                }\n\n                return null;\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _init$1.apply(this, arguments);\n}\n\nfunction init$2() {\n  return _init$2.apply(this, arguments);\n}\n\nfunction _init$2() {\n  _init$2 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n    var _yield$import, InjectedConnector, UserRejectedRequestError;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('@web3-react/injected-connector');\n\n          case 2:\n            _yield$import = _context.sent;\n            InjectedConnector = _yield$import.InjectedConnector;\n            UserRejectedRequestError = _yield$import.UserRejectedRequestError;\n            return _context.abrupt(\"return\", {\n              web3ReactConnector: function web3ReactConnector(_ref) {\n                var chainId = _ref.chainId;\n                return new InjectedConnector({\n                  supportedChainIds: [chainId]\n                });\n              },\n              handleActivationError: function handleActivationError(err) {\n                return err instanceof UserRejectedRequestError ? new ConnectionRejectedError() : null;\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _init$2.apply(this, arguments);\n}\n\nfunction init$3() {\n  return _init$3.apply(this, arguments);\n}\n\nfunction _init$3() {\n  _init$3 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n    var _yield$import, PortisConnector;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('@web3-react/portis-connector');\n\n          case 2:\n            _yield$import = _context.sent;\n            PortisConnector = _yield$import.PortisConnector;\n            return _context.abrupt(\"return\", {\n              web3ReactConnector: function web3ReactConnector(_ref) {\n                var chainId = _ref.chainId,\n                    dAppId = _ref.dAppId;\n\n                if (!dAppId) {\n                  throw new ConnectorConfigError('The Portis connector requires dAppId to be set.');\n                }\n\n                return new PortisConnector({\n                  dAppId: dAppId,\n                  networks: [chainId]\n                });\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _init$3.apply(this, arguments);\n}\n\nfunction init$4() {\n  return _init$4.apply(this, arguments);\n}\n\nfunction _init$4() {\n  _init$4 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n    var _yield$import, ProvidedConnector, UserRejectedRequestError;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('@aragon/provided-connector');\n\n          case 2:\n            _yield$import = _context.sent;\n            ProvidedConnector = _yield$import.ProvidedConnector;\n            UserRejectedRequestError = _yield$import.UserRejectedRequestError;\n            return _context.abrupt(\"return\", {\n              web3ReactConnector: function web3ReactConnector(_ref) {\n                var chainId = _ref.chainId,\n                    provider = _ref.provider;\n                return new ProvidedConnector({\n                  provider: provider,\n                  supportedChainIds: [chainId]\n                });\n              },\n              handleActivationError: function handleActivationError(err) {\n                return err instanceof UserRejectedRequestError ? new ConnectionRejectedError() : null;\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _init$4.apply(this, arguments);\n}\n\nfunction init$5() {\n  return _init$5.apply(this, arguments);\n}\n\nfunction _init$5() {\n  _init$5 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n    var _yield$import, TorusConnector;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('@web3-react/torus-connector');\n\n          case 2:\n            _yield$import = _context.sent;\n            TorusConnector = _yield$import.TorusConnector;\n            return _context.abrupt(\"return\", {\n              web3ReactConnector: function web3ReactConnector(_ref) {\n                var chainId = _ref.chainId,\n                    initOptions = _ref.initOptions,\n                    constructorOptions = _ref.constructorOptions;\n                return new TorusConnector({\n                  chainId: chainId,\n                  constructorOptions: constructorOptions,\n                  initOptions: initOptions\n                });\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _init$5.apply(this, arguments);\n}\n\nfunction init$6() {\n  return _init$6.apply(this, arguments);\n}\n\nfunction _init$6() {\n  _init$6 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n    var _yield$import, UserRejectedRequestError, WalletConnectConnector;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('@web3-react/walletconnect-connector');\n\n          case 2:\n            _yield$import = _context.sent;\n            UserRejectedRequestError = _yield$import.UserRejectedRequestError;\n            WalletConnectConnector = _yield$import.WalletConnectConnector;\n            return _context.abrupt(\"return\", {\n              web3ReactConnector: function web3ReactConnector(_ref) {\n                var _rpc;\n\n                var chainId = _ref.chainId,\n                    rpcUrl = _ref.rpcUrl,\n                    bridge = _ref.bridge,\n                    pollingInterval = _ref.pollingInterval;\n\n                if (!rpcUrl) {\n                  throw new ConnectorConfigError('The WalletConnect connector requires rpcUrl to be set.');\n                }\n\n                if (!/^https?:\\/\\//.test(rpcUrl)) {\n                  throw new ConnectorConfigError('The WalletConnect connector requires rpcUrl to be an HTTP URL.');\n                }\n\n                return new WalletConnectConnector({\n                  bridge: bridge,\n                  pollingInterval: pollingInterval,\n                  qrcode: true,\n                  rpc: (_rpc = {}, _rpc[chainId] = rpcUrl, _rpc)\n                });\n              },\n              handleActivationError: function handleActivationError(err) {\n                return err instanceof UserRejectedRequestError ? new ConnectionRejectedError() : null;\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _init$6.apply(this, arguments);\n}\n\nfunction init$7() {\n  return _init$7.apply(this, arguments);\n}\n\nfunction _init$7() {\n  _init$7 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n    var _yield$import, WalletLinkConnector;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('@web3-react/walletlink-connector');\n\n          case 2:\n            _yield$import = _context.sent;\n            WalletLinkConnector = _yield$import.WalletLinkConnector;\n            return _context.abrupt(\"return\", {\n              web3ReactConnector: function web3ReactConnector(_ref) {\n                var url = _ref.url,\n                    appName = _ref.appName,\n                    appLogoUrl = _ref.appLogoUrl;\n\n                if (!/^https?:\\/\\//.test(url)) {\n                  throw new ConnectorConfigError('The WalletLink connector requires url to be an HTTP URL.');\n                }\n\n                return new WalletLinkConnector({\n                  url: url,\n                  appName: appName,\n                  appLogoUrl: appLogoUrl\n                });\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _init$7.apply(this, arguments);\n} // on the hardware wallet. This should eventually be made dynamic.\n\n\nvar LEDGER_LIVE_PATH = \"m/44'/60'/0'/0\";\nvar POLLING_INTERVAL = 12000;\n\nfunction init$8() {\n  return _init$8.apply(this, arguments);\n}\n\nfunction _init$8() {\n  _init$8 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n    var _yield$import, LedgerConnector;\n\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('@web3-react/ledger-connector');\n\n          case 2:\n            _yield$import = _context.sent;\n            LedgerConnector = _yield$import.LedgerConnector;\n            return _context.abrupt(\"return\", {\n              web3ReactConnector: function web3ReactConnector(_ref) {\n                var chainId = _ref.chainId,\n                    url = _ref.url;\n\n                if (!url) {\n                  throw new ConnectorConfigError('The Ledger connector requires url to be set.');\n                }\n\n                return new LedgerConnector({\n                  url: url,\n                  chainId: chainId,\n                  pollingInterval: POLLING_INTERVAL,\n                  baseDerivationPath: LEDGER_LIVE_PATH\n                });\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _init$8.apply(this, arguments);\n}\n\nfunction getConnectors(initsOrConfigs) {\n  if (initsOrConfigs === void 0) {\n    initsOrConfigs = {};\n  }\n\n  var connectors = {\n    fortmatic: [init, null],\n    frame: [init$1, null],\n    injected: [init$2, null],\n    portis: [init$3, null],\n    provided: [init$4, null],\n    torus: [init$5, null],\n    walletconnect: [init$6, null],\n    walletlink: [init$7, null],\n    ledger: [init$8, null]\n  };\n\n  for (var _i = 0, _Object$entries = Object.entries(initsOrConfigs); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _Object$entries[_i],\n        id = _Object$entries$_i[0],\n        initOrConfig = _Object$entries$_i[1]; // If initOrConfig is a function, it is an initializer.\n\n    if (typeof initOrConfig === 'function') {\n      connectors[id] = [initOrConfig, null];\n      continue;\n    } // Otherwise it is a config\n\n\n    if (connectors[id]) {\n      connectors[id][1] = initOrConfig;\n    }\n  }\n\n  return connectors;\n}\n\nvar NO_BALANCE = '-1';\nvar UseWalletContext = /*#__PURE__*/createContext(null);\n\nfunction useWallet() {\n  var walletContext = useContext(UseWalletContext);\n\n  if (walletContext === null) {\n    throw new Error('useWallet() can only be used inside of <UseWalletProvider />, ' + 'please declare it at a higher level.');\n  }\n\n  var getBlockNumber = useGetBlockNumber();\n  var wallet = walletContext.wallet;\n  return useMemo(function () {\n    return _extends({}, wallet, {\n      getBlockNumber: getBlockNumber\n    });\n  }, [getBlockNumber, wallet]);\n}\n\nfunction useGetBlockNumber() {\n  var walletContext = useContext(UseWalletContext);\n\n  var _useState = useState(null),\n      blockNumber = _useState[0],\n      setBlockNumber = _useState[1];\n\n  var requestedBlockNumber = useRef(false);\n  var getBlockNumber = useCallback(function () {\n    if (walletContext === null) {\n      return null;\n    }\n\n    requestedBlockNumber.current = true;\n    walletContext.addBlockNumberListener(setBlockNumber);\n    return blockNumber;\n  }, [walletContext, blockNumber]);\n  useEffect(function () {\n    if (!requestedBlockNumber.current || walletContext === null) {\n      return;\n    }\n\n    walletContext.addBlockNumberListener(setBlockNumber);\n    return function () {\n      walletContext.removeBlockNumberListener(setBlockNumber);\n    };\n  }, [requestedBlockNumber, walletContext]);\n  return getBlockNumber;\n}\n\nfunction useWalletBalance(_ref) {\n  var account = _ref.account,\n      ethereum = _ref.ethereum,\n      pollBalanceInterval = _ref.pollBalanceInterval;\n\n  var _useState2 = useState(NO_BALANCE),\n      balance = _useState2[0],\n      setBalance = _useState2[1];\n\n  useEffect(function () {\n    if (!account || !ethereum) {\n      return;\n    }\n\n    var cancel = false; // Poll wallet balance\n\n    var pollBalance = pollEvery(function (account, ethereum, onUpdate) {\n      var lastBalance = NO_BALANCE;\n      return {\n        request: function request() {\n          return _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n            return runtime_1.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    return _context.abrupt(\"return\", getAccountBalance(ethereum, account).then(function (value) {\n                      return value ? JSBI.BigInt(value).toString() : NO_BALANCE;\n                    })[\"catch\"](function () {\n                      return NO_BALANCE;\n                    }));\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }))();\n        },\n        onResult: function onResult(balance) {\n          if (!cancel && balance !== lastBalance) {\n            lastBalance = balance;\n            onUpdate(balance);\n          }\n        }\n      };\n    }, pollBalanceInterval); // start polling balance every x time\n\n    var stopPollingBalance = pollBalance(account, ethereum, setBalance);\n    return function () {\n      cancel = true;\n      stopPollingBalance();\n      setBalance(NO_BALANCE);\n    };\n  }, [account, ethereum, pollBalanceInterval]);\n  return balance;\n} // Only watch block numbers, and return functions allowing to subscribe to it.\n\n\nfunction useWatchBlockNumber(_ref2) {\n  var ethereum = _ref2.ethereum,\n      pollBlockNumberInterval = _ref2.pollBlockNumberInterval;\n  var lastBlockNumber = useRef(null); // Using listeners lets useWallet() decide if it wants to expose the block\n  // number, which implies to re-render whenever the block number updates.\n\n  var blockNumberListeners = useRef(new Set());\n  var addBlockNumberListener = useCallback(function (cb) {\n    if (blockNumberListeners.current.has(cb)) {\n      return;\n    } // Immediately send the block number to the new listener\n\n\n    cb(lastBlockNumber.current); // Add the listener\n\n    blockNumberListeners.current.add(cb);\n  }, []);\n  var removeBlockNumberListener = useCallback(function (cb) {\n    blockNumberListeners.current[\"delete\"](cb);\n  }, []); // Update the block number and broadcast it to the listeners\n\n  var updateBlockNumber = useCallback(function (blockNumber) {\n    if (lastBlockNumber.current === blockNumber) {\n      return;\n    }\n\n    lastBlockNumber.current = blockNumber;\n    blockNumberListeners.current.forEach(function (cb) {\n      return cb(blockNumber);\n    });\n  }, []);\n  useEffect(function () {\n    if (!ethereum) {\n      updateBlockNumber(null);\n      return;\n    }\n\n    var cancel = false;\n    var pollBlockNumber = pollEvery(function () {\n      return {\n        request: function request() {\n          return getBlockNumber(ethereum);\n        },\n        onResult: function onResult(latestBlockNumber) {\n          if (!cancel) {\n            updateBlockNumber(latestBlockNumber === null ? null : JSBI.BigInt(latestBlockNumber).toString());\n          }\n        }\n      };\n    }, pollBlockNumberInterval);\n    var stopPollingBlockNumber = pollBlockNumber();\n    return function () {\n      cancel = true;\n      stopPollingBlockNumber();\n    };\n  }, [ethereum, pollBlockNumberInterval, updateBlockNumber]);\n  return {\n    addBlockNumberListener: addBlockNumberListener,\n    removeBlockNumberListener: removeBlockNumberListener\n  };\n}\n\nfunction UseWalletProvider(_ref3) {\n  var chainId = _ref3.chainId,\n      children = _ref3.children,\n      connectorsInitsOrConfigs = _ref3.connectors,\n      pollBalanceInterval = _ref3.pollBalanceInterval,\n      pollBlockNumberInterval = _ref3.pollBlockNumberInterval;\n  var walletContext = useContext(UseWalletContext);\n\n  if (walletContext !== null) {\n    throw new Error('<UseWalletProvider /> has already been declared.');\n  }\n\n  var _useState3 = useState(null),\n      connector = _useState3[0],\n      setConnector = _useState3[1];\n\n  var _useState4 = useState(null),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(null),\n      type = _useState5[0],\n      setType = _useState5[1];\n\n  var _useState6 = useState('disconnected'),\n      status = _useState6[0],\n      setStatus = _useState6[1];\n\n  var web3ReactContext = useWeb3React();\n  var activationId = useRef(0);\n  var account = web3ReactContext.account,\n      ethereum = web3ReactContext.library;\n  var balance = useWalletBalance({\n    account: account,\n    ethereum: ethereum,\n    pollBalanceInterval: pollBalanceInterval\n  });\n\n  var _useWatchBlockNumber = useWatchBlockNumber({\n    ethereum: ethereum,\n    pollBlockNumberInterval: pollBlockNumberInterval\n  }),\n      addBlockNumberListener = _useWatchBlockNumber.addBlockNumberListener,\n      removeBlockNumberListener = _useWatchBlockNumber.removeBlockNumberListener; // Combine the user-provided connectors with the default ones (see connectors.js).\n\n\n  var connectors = useMemo(function () {\n    return getConnectors(connectorsInitsOrConfigs);\n  }, [connectorsInitsOrConfigs]);\n  var reset = useCallback(function () {\n    if (web3ReactContext.active) {\n      web3ReactContext.deactivate();\n    }\n\n    setConnector(null);\n    setError(null);\n    setStatus('disconnected');\n  }, [web3ReactContext]);\n  var connect = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2(connectorId) {\n      var id, _ref5, connectorInit, connectorConfig, connector, web3ReactConnector, handledError;\n\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (connectorId === void 0) {\n                connectorId = 'injected';\n              } // Prevent race conditions between connections by using an external ID.\n\n\n              id = ++activationId.current;\n              reset(); // Check if another connection has happened right after deactivate().\n\n              if (!(id !== activationId.current)) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 5:\n              if (connectors[connectorId]) {\n                _context2.next = 9;\n                break;\n              }\n\n              setStatus('error');\n              setError(new ConnectorUnsupportedError(connectorId));\n              return _context2.abrupt(\"return\");\n\n            case 9:\n              // If no connection happens, we're in the right context and can safely update\n              // the connection stage status\n              setStatus('connecting');\n              _ref5 = connectors[connectorId] || [], connectorInit = _ref5[0], connectorConfig = _ref5[1]; // Initialize the (useWallet) connector if it exists.\n\n              _context2.next = 13;\n              return connectorInit == null ? void 0 : connectorInit();\n\n            case 13:\n              connector = _context2.sent; // Initialize the web3-react connector if it exists.\n\n              web3ReactConnector = connector == null ? void 0 : connector.web3ReactConnector == null ? void 0 : connector.web3ReactConnector(_extends({\n                chainId: chainId\n              }, connectorConfig || {}));\n\n              if (web3ReactConnector) {\n                _context2.next = 19;\n                break;\n              }\n\n              setStatus('error');\n              setError(new ConnectorUnsupportedError(connectorId));\n              return _context2.abrupt(\"return\");\n\n            case 19:\n              _context2.prev = 19; // TODO: there is no way to prevent an activation to complete, but we\n              // could reconnect to the last provider the user tried to connect to.\n\n              setConnector(connectorId);\n              _context2.next = 23;\n              return web3ReactContext.activate(web3ReactConnector, undefined, true);\n\n            case 23:\n              setStatus('connected');\n              _context2.next = 41;\n              break;\n\n            case 26:\n              _context2.prev = 26;\n              _context2.t0 = _context2[\"catch\"](19);\n\n              if (!(id !== activationId.current)) {\n                _context2.next = 30;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 30:\n              // If not, the error has been thrown during the current connection attempt,\n              // so it's correct to indicate that there has been an error\n              setConnector(null);\n              setStatus('error');\n\n              if (!(_context2.t0 instanceof UnsupportedChainIdError)) {\n                _context2.next = 35;\n                break;\n              }\n\n              setError(new ChainUnsupportedError(-1, chainId));\n              return _context2.abrupt(\"return\");\n\n            case 35:\n              if (!connector.handleActivationError) {\n                _context2.next = 40;\n                break;\n              }\n\n              handledError = connector.handleActivationError(_context2.t0);\n\n              if (!handledError) {\n                _context2.next = 40;\n                break;\n              }\n\n              setError(handledError);\n              return _context2.abrupt(\"return\");\n\n            case 40:\n              // Otherwise, set to state the received error\n              setError(_context2.t0);\n\n            case 41:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[19, 26]]);\n    }));\n\n    return function (_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [chainId, connectors, reset, web3ReactContext]);\n  useEffect(function () {\n    if (!account || !ethereum) {\n      return;\n    }\n\n    var cancel = false;\n    setType(null);\n    getAccountIsContract(ethereum, account).then(function (isContract) {\n      if (!cancel) {\n        setStatus('connected');\n        setType(isContract ? 'contract' : 'normal');\n      }\n    });\n    return function () {\n      cancel = true;\n      setStatus('disconnected');\n      setType(null);\n    };\n  }, [account, ethereum]);\n  var wallet = useMemo(function () {\n    return {\n      _web3ReactContext: web3ReactContext,\n      account: account || null,\n      balance: balance,\n      chainId: chainId,\n      connect: connect,\n      connector: connector,\n      connectors: connectors,\n      error: error,\n      ethereum: ethereum,\n      networkName: getNetworkName(chainId),\n      reset: reset,\n      status: status,\n      type: type\n    };\n  }, [account, balance, chainId, connect, connector, connectors, error, ethereum, type, reset, status, web3ReactContext]);\n  return createElement(UseWalletContext.Provider, {\n    value: {\n      addBlockNumberListener: addBlockNumberListener,\n      pollBalanceInterval: pollBalanceInterval,\n      pollBlockNumberInterval: pollBlockNumberInterval,\n      removeBlockNumberListener: removeBlockNumberListener,\n      wallet: wallet\n    }\n  }, children);\n}\n\nUseWalletProvider.propTypes = {\n  chainId: number,\n  children: node,\n  connectors: /*#__PURE__*/objectOf(object),\n  pollBalanceInterval: number,\n  pollBlockNumberInterval: number\n};\nUseWalletProvider.defaultProps = {\n  chainId: 1,\n  connectors: {},\n  pollBalanceInterval: 2000,\n  pollBlockNumberInterval: 5000\n};\n\nfunction UseWalletProviderWrapper(props) {\n  return createElement(Web3ReactProvider, {\n    getLibrary: function getLibrary(ethereum) {\n      return ethereum;\n    }\n  }, createElement(UseWalletProvider, Object.assign({}, props)));\n}\n\nUseWalletProviderWrapper.propTypes = UseWalletProvider.propTypes;\nUseWalletProviderWrapper.defaultProps = UseWalletProvider.defaultProps;\nexport default useWallet;\nexport { ChainUnsupportedError, ConnectionRejectedError, ConnectorUnsupportedError, UseWalletProviderWrapper as UseWalletProvider, useWallet };","map":{"version":3,"sources":["../../node_modules/regenerator-runtime/runtime.js","../../src/utils.ts","../../src/errors.ts","../../src/connectors/ConnectorFortmatic.ts","../../src/connectors/ConnectorFrame.ts","../../src/connectors/ConnectorInjected.ts","../../src/connectors/ConnectorPortis.ts","../../src/connectors/ConnectorProvided.ts","../../src/connectors/ConnectorTorus.ts","../../src/connectors/ConnectorWalletConnect.ts","../../src/connectors/ConnectorWalletLink.ts","../../src/connectors/ConnectorLedger.ts","../../src/connectors.ts","../../src/index.tsx"],"names":["undefined","KNOWN_CHAINS","getNetworkName","chainId","response","rpcResult","isUnwrappedRpcResult","ethereumRequest","ethereum","method","params","from","jsonrpc","id","reject","resolve","code","pollEvery","fn","delay","stop","poll","result","request","onResult","timer","setTimeout","clearTimeout","ChainUnsupportedError","ConnectorUnsupportedError","ConnectionRejectedError","ConnectorConfigError","FortmaticConnector","web3ReactConnector","apiKey","FrameConnector","UserRejectedRequestError","supportedChainIds","handleActivationError","err","InjectedConnector","PortisConnector","dAppId","networks","ProvidedConnector","provider","TorusConnector","initOptions","constructorOptions","WalletConnectConnector","rpcUrl","bridge","pollingInterval","qrcode","rpc","WalletLinkConnector","url","appName","appLogoUrl","LEDGER_LIVE_PATH","POLLING_INTERVAL","LedgerConnector","baseDerivationPath","getConnectors","initsOrConfigs","connectors","fortmatic","frame","injected","portis","provided","torus","walletconnect","walletlink","ledger","initOrConfig","Object","NO_BALANCE","UseWalletContext","React","walletContext","useContext","getBlockNumber","useGetBlockNumber","wallet","useMemo","blockNumber","setBlockNumber","useState","requestedBlockNumber","useRef","useCallback","useEffect","account","pollBalanceInterval","balance","setBalance","cancel","pollBalance","lastBalance","value","JSBI","onUpdate","stopPollingBalance","pollBlockNumberInterval","lastBlockNumber","blockNumberListeners","addBlockNumberListener","cb","removeBlockNumberListener","updateBlockNumber","pollBlockNumber","latestBlockNumber","stopPollingBlockNumber","children","connectorsInitsOrConfigs","connector","setConnector","error","setError","type","setType","status","setStatus","web3ReactContext","useWeb3React","activationId","useWalletBalance","useWatchBlockNumber","reset","connect","connectorId","connectorInit","connectorConfig","handledError","getAccountIsContract","isContract","_web3ReactContext","networkName","UseWalletProvider","PropTypes","getLibrary","UseWalletProviderWrapper"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { Account, EthereumProvider } from './types'\n\nconst KNOWN_CHAINS = new Map<number, string>([\n  [1, 'Mainnet'],\n  [2, 'Expanse'],\n  [3, 'Ropsten'],\n  [4, 'Rinkeby'],\n  [5, 'Goerli'],\n  [8, 'Ubiq'],\n  [42, 'Kovan'],\n  [100, 'xDai'],\n  // This chainId is arbitrary and can be changed,\n  // but by convention this is the number used\n  // for local chains (ganache, buidler, etc) by default.\n  [1337, 'Local'],\n  [5777, 'Ganache'],\n])\n\nexport function getNetworkName(chainId: number) {\n  return KNOWN_CHAINS.get(chainId) || 'Unknown'\n}\n\nfunction isUnwrappedRpcResult(response: unknown): response is {\n  error?: string\n  result?: unknown\n} {\n  return (\n    typeof response === 'object' && response !== null && 'jsonrpc' in response\n  )\n}\n\nexport function rpcResult(response: unknown): unknown | null {\n  // Some providers don’t wrap the response\n  if (isUnwrappedRpcResult(response)) {\n    if (response.error) {\n      throw new Error(response.error)\n    }\n    return response.result || null\n  }\n\n  return response || null\n}\n\nasync function ethereumRequest(\n  ethereum: EthereumProvider,\n  method: string,\n  params: string[]\n): Promise<any> {\n  // If ethereum.request() exists, the provider is probably EIP-1193 compliant.\n  if (ethereum.request) {\n    return ethereum.request({ method, params }).then(rpcResult)\n  }\n\n  // This is specific to some older versions of MetaMask combined with Web3.js.\n  if (ethereum.sendAsync && ethereum.selectedAddress) {\n    return new Promise((resolve, reject) => {\n      ethereum.sendAsync(\n        {\n          method,\n          params,\n          from: ethereum.selectedAddress,\n          jsonrpc: '2.0',\n          id: 0,\n        },\n        (err: Error, result: any) => {\n          if (err) {\n            reject(err)\n          } else {\n            resolve(result)\n          }\n        }\n      )\n    }).then(rpcResult)\n  }\n\n  // If none of the previous two exist, we assume the provider is pre EIP-1193,\n  // using .send() rather than .request().\n  if (ethereum.send) {\n    return ethereum.send(method, params).then(rpcResult)\n  }\n\n  throw new Error(\n    'The Ethereum provider doesn’t seem to provide a request method.'\n  )\n}\n\nexport async function getAccountIsContract(\n  ethereum: EthereumProvider,\n  account: Account\n): Promise<boolean> {\n  try {\n    const code = await ethereumRequest(ethereum, 'eth_getCode', [account])\n    return code !== '0x'\n  } catch (err) {\n    return false\n  }\n}\n\nexport async function getAccountBalance(\n  ethereum: EthereumProvider,\n  account: Account\n) {\n  return ethereumRequest(ethereum, 'eth_getBalance', [account, 'latest'])\n}\n\nexport async function getBlockNumber(ethereum: EthereumProvider) {\n  return ethereumRequest(ethereum, 'eth_blockNumber', [])\n}\n\nexport function pollEvery<R, T>(\n  fn: (\n    // As of TS 3.9, it doesn’t seem possible to specify dynamic params\n    // as a generic type (e.g. using `T` here). Instead, we have to specify an\n    // array in place (`T[]`), making it impossible to type params independently.\n    ...params: T[]\n  ) => {\n    request: () => Promise<R>\n    onResult: (result: R) => void\n  },\n  delay: number\n) {\n  let timer: any // can be TimeOut (Node) or number (web)\n  let stop = false\n  const poll = async (\n    request: () => Promise<R>,\n    onResult: (result: R) => void\n  ) => {\n    const result = await request()\n    if (!stop) {\n      onResult(result)\n      timer = setTimeout(poll.bind(null, request, onResult), delay)\n    }\n  }\n  return (...params: T[]) => {\n    const { request, onResult } = fn(...params)\n    stop = false\n    poll(request, onResult)\n    return () => {\n      stop = true\n      clearTimeout(timer)\n    }\n  }\n}\n","import { getNetworkName } from './utils'\n\nexport class ChainUnsupportedError extends Error {\n  constructor(chainId: number, expectedChainId: number, ...params: any[]) {\n    super(...params)\n    this.name = 'ChainUnsupportedError'\n    this.message =\n      `Unsupported chain: ${getNetworkName(chainId)}${\n        chainId === -1 ? '' : ` (Chain ID: ${chainId})`\n      }. ` +\n      `Required chain: ${getNetworkName(\n        expectedChainId\n      )} (Chain ID: ${expectedChainId}).`\n  }\n}\n\nexport class ConnectorUnsupportedError extends Error {\n  constructor(connectorId: string, ...params: any[]) {\n    super(...params)\n    this.name = 'ConnectorUnsupportedError'\n    this.message = `Unsupported connector: ${connectorId}.`\n  }\n}\n\nexport class ConnectionRejectedError extends Error {\n  constructor(...params: any[]) {\n    super(...params)\n    this.name = 'ConnectionRejectedError'\n    this.message = `The activation has been rejected by the provider.`\n  }\n}\n\nexport class ConnectorConfigError extends Error {\n  constructor(...params: any[]) {\n    super(...params)\n    this.name = 'ConnectorConfigError'\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectorConfigError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { FortmaticConnector } = await import('@web3-react/fortmatic-connector')\n  return {\n    web3ReactConnector({\n      chainId,\n      apiKey,\n    }: {\n      chainId: number\n      apiKey: string\n    }) {\n      if (!apiKey) {\n        throw new ConnectorConfigError(\n          'The Fortmatic connector requires apiKey to be set.'\n        )\n      }\n      return new FortmaticConnector({ apiKey, chainId })\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectionRejectedError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { FrameConnector, UserRejectedRequestError } = await import(\n    '@web3-react/frame-connector'\n  )\n  return {\n    web3ReactConnector({ chainId }: { chainId: number }) {\n      return new FrameConnector({ supportedChainIds: [chainId] })\n    },\n    handleActivationError(err: Error) {\n      if (err instanceof UserRejectedRequestError) {\n        return new ConnectionRejectedError()\n      }\n      if (err.message.startsWith('JSON.parse')) {\n        return new Error(\n          'There seems to be an issue when trying to connect to Frame.'\n        )\n      }\n      return null\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectionRejectedError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { InjectedConnector, UserRejectedRequestError } = await import(\n    '@web3-react/injected-connector'\n  )\n  return {\n    web3ReactConnector({ chainId }: { chainId: number }) {\n      return new InjectedConnector({ supportedChainIds: [chainId] })\n    },\n    handleActivationError(err: Error) {\n      return err instanceof UserRejectedRequestError\n        ? new ConnectionRejectedError()\n        : null\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectorConfigError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { PortisConnector } = await import('@web3-react/portis-connector')\n  return {\n    web3ReactConnector({\n      chainId,\n      dAppId,\n    }: {\n      chainId: number\n      dAppId: string\n    }) {\n      if (!dAppId) {\n        throw new ConnectorConfigError(\n          'The Portis connector requires dAppId to be set.'\n        )\n      }\n      return new PortisConnector({ dAppId, networks: [chainId] })\n    },\n  }\n}\n","import { Connector, EthereumProvider } from '../types'\nimport { ConnectionRejectedError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { ProvidedConnector, UserRejectedRequestError } = await import(\n    '@aragon/provided-connector'\n  )\n  return {\n    web3ReactConnector({\n      chainId,\n      provider,\n    }: {\n      chainId: number\n      provider: EthereumProvider\n    }) {\n      return new ProvidedConnector({\n        provider,\n        supportedChainIds: [chainId],\n      })\n    },\n    handleActivationError(err: Error) {\n      return err instanceof UserRejectedRequestError\n        ? new ConnectionRejectedError()\n        : null\n    },\n  }\n}\n","import { Connector } from '../types'\n\nexport default async function init(): Promise<Connector> {\n  const { TorusConnector } = await import('@web3-react/torus-connector')\n  return {\n    web3ReactConnector({\n      chainId,\n      initOptions,\n      constructorOptions,\n    }: {\n      chainId: number\n      initOptions: any\n      constructorOptions: any\n    }) {\n      return new TorusConnector({ chainId, constructorOptions, initOptions })\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectionRejectedError, ConnectorConfigError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { UserRejectedRequestError, WalletConnectConnector } = await import(\n    '@web3-react/walletconnect-connector'\n  )\n  return {\n    web3ReactConnector({\n      chainId,\n      rpcUrl,\n      bridge,\n      pollingInterval,\n    }: {\n      chainId: number\n      rpcUrl: string\n      bridge: any\n      pollingInterval: number\n    }) {\n      if (!rpcUrl) {\n        throw new ConnectorConfigError(\n          'The WalletConnect connector requires rpcUrl to be set.'\n        )\n      }\n      if (!/^https?:\\/\\//.test(rpcUrl)) {\n        throw new ConnectorConfigError(\n          'The WalletConnect connector requires rpcUrl to be an HTTP URL.'\n        )\n      }\n      return new WalletConnectConnector({\n        bridge,\n        pollingInterval,\n        qrcode: true,\n        rpc: { [chainId]: rpcUrl },\n      })\n    },\n    handleActivationError(err: Error) {\n      return err instanceof UserRejectedRequestError\n        ? new ConnectionRejectedError()\n        : null\n    },\n  }\n}\n","import 'regenerator-runtime/runtime.js'\nimport { Connector } from '../types'\nimport { ConnectorConfigError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { WalletLinkConnector } = await import(\n    '@web3-react/walletlink-connector'\n  )\n  return {\n    web3ReactConnector({\n      url,\n      appName,\n      appLogoUrl,\n    }: {\n      url: string\n      appName: string\n      appLogoUrl: string\n    }) {\n      if (!/^https?:\\/\\//.test(url)) {\n        throw new ConnectorConfigError(\n          'The WalletLink connector requires url to be an HTTP URL.'\n        )\n      }\n      return new WalletLinkConnector({ url, appName, appLogoUrl })\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectorConfigError } from '../errors'\n\n// NOTE: The ledger live path specify which chain and which account is used\n// on the hardware wallet. This should eventually be made dynamic.\nconst LEDGER_LIVE_PATH = \"m/44'/60'/0'/0\"\nconst POLLING_INTERVAL = 12000\n\nexport default async function init(): Promise<Connector> {\n  const { LedgerConnector } = await import('@web3-react/ledger-connector')\n  return {\n    web3ReactConnector({ chainId, url }: { chainId: number; url: string }) {\n      if (!url) {\n        throw new ConnectorConfigError(\n          'The Ledger connector requires url to be set.'\n        )\n      }\n      return new LedgerConnector({\n        url,\n        chainId,\n        pollingInterval: POLLING_INTERVAL,\n        baseDerivationPath: LEDGER_LIVE_PATH,\n      })\n    },\n  }\n}\n","import { ConnectorConfig, ConnectorInit } from './types'\nimport initFortmatic from './connectors/ConnectorFortmatic'\nimport initFrame from './connectors/ConnectorFrame'\nimport initInjected from './connectors/ConnectorInjected'\nimport initPortis from './connectors/ConnectorPortis'\nimport initProvided from './connectors/ConnectorProvided'\nimport initTorus from './connectors/ConnectorTorus'\nimport initWalletConnect from './connectors/ConnectorWalletConnect'\nimport initWalletLink from './connectors/ConnectorWalletLink'\nimport initLedger from './connectors/ConnectorLedger'\n\nexport function getConnectors(\n  initsOrConfigs: { [key: string]: ConnectorInit | ConnectorConfig } = {}\n) {\n  const connectors: {\n    [key: string]: [ConnectorInit, ConnectorConfig | null]\n  } = {\n    fortmatic: [initFortmatic, null],\n    frame: [initFrame, null],\n    injected: [initInjected, null],\n    portis: [initPortis, null],\n    provided: [initProvided, null],\n    torus: [initTorus, null],\n    walletconnect: [initWalletConnect, null],\n    walletlink: [initWalletLink, null],\n    ledger: [initLedger, null],\n  }\n\n  for (const [id, initOrConfig] of Object.entries(initsOrConfigs)) {\n    // If initOrConfig is a function, it is an initializer.\n    if (typeof initOrConfig === 'function') {\n      connectors[id] = [initOrConfig as ConnectorInit, null]\n      continue\n    }\n\n    // Otherwise it is a config\n    if (connectors[id]) {\n      connectors[id][1] = initOrConfig as ConnectorConfig\n    }\n  }\n\n  return connectors\n}\n","import type { ReactNode } from 'react'\nimport * as PropTypes from 'prop-types'\nimport * as React from 'react'\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  UnsupportedChainIdError,\n  Web3ReactProvider,\n  useWeb3React,\n} from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport {\n  Account,\n  AccountType,\n  Balance,\n  Connector,\n  ConnectorConfig,\n  EthereumProvider,\n  Status,\n  Wallet,\n} from './types'\nimport { getConnectors } from './connectors'\nimport {\n  ConnectionRejectedError,\n  ChainUnsupportedError,\n  ConnectorUnsupportedError,\n} from './errors'\nimport {\n  getAccountBalance,\n  getAccountIsContract,\n  getBlockNumber,\n  getNetworkName,\n  pollEvery,\n} from './utils'\n\nconst NO_BALANCE = '-1'\n\nconst UseWalletContext = React.createContext<WalletContext>(null)\n\ntype WalletContext = {\n  addBlockNumberListener: (callback: (blockNumber: number) => void) => void\n  pollBalanceInterval: number\n  pollBlockNumberInterval: number\n  removeBlockNumberListener: (callback: (blockNumber: number) => void) => void\n  wallet: Wallet\n} | null\n\ntype UseWalletProviderProps = {\n  chainId: number\n  children: ReactNode\n  connectors: { [key: string]: Connector | ConnectorConfig }\n  pollBalanceInterval: number\n  pollBlockNumberInterval: number\n}\n\nfunction useWallet(): Wallet {\n  const walletContext = useContext(UseWalletContext)\n\n  if (walletContext === null) {\n    throw new Error(\n      'useWallet() can only be used inside of <UseWalletProvider />, ' +\n        'please declare it at a higher level.'\n    )\n  }\n\n  const getBlockNumber = useGetBlockNumber()\n  const { wallet } = walletContext\n\n  return useMemo(() => {\n    return { ...wallet, getBlockNumber }\n  }, [getBlockNumber, wallet])\n}\n\nfunction useGetBlockNumber(): () => number | null {\n  const walletContext = useContext(UseWalletContext)\n  const [blockNumber, setBlockNumber] = useState<number | null>(null)\n  const requestedBlockNumber = useRef<boolean>(false)\n\n  const getBlockNumber = useCallback<() => number | null>(() => {\n    if (walletContext === null) {\n      return null\n    }\n\n    requestedBlockNumber.current = true\n    walletContext.addBlockNumberListener(setBlockNumber)\n\n    return blockNumber\n  }, [walletContext, blockNumber])\n\n  useEffect(() => {\n    if (!requestedBlockNumber.current || walletContext === null) {\n      return\n    }\n\n    walletContext.addBlockNumberListener(setBlockNumber)\n    return () => {\n      walletContext.removeBlockNumberListener(setBlockNumber)\n    }\n  }, [requestedBlockNumber, walletContext])\n\n  return getBlockNumber\n}\n\nfunction useWalletBalance({\n  account,\n  ethereum,\n  pollBalanceInterval,\n}: {\n  account?: Account | null\n  ethereum?: EthereumProvider\n  pollBalanceInterval: number\n}) {\n  const [balance, setBalance] = useState<Balance>(NO_BALANCE)\n\n  useEffect(() => {\n    if (!account || !ethereum) {\n      return\n    }\n\n    let cancel = false\n\n    // Poll wallet balance\n    const pollBalance = pollEvery<Balance, any>(\n      (\n        account: Account,\n        ethereum: EthereumProvider,\n        onUpdate: (balance: Balance) => void\n      ) => {\n        let lastBalance = NO_BALANCE\n        return {\n          async request() {\n            return getAccountBalance(ethereum, account)\n              .then((value) => {\n                return value ? JSBI.BigInt(value).toString() : NO_BALANCE\n              })\n              .catch(() => NO_BALANCE)\n          },\n          onResult(balance: Balance) {\n            if (!cancel && balance !== lastBalance) {\n              lastBalance = balance\n              onUpdate(balance)\n            }\n          },\n        }\n      },\n      pollBalanceInterval\n    )\n\n    // start polling balance every x time\n    const stopPollingBalance = pollBalance(account, ethereum, setBalance)\n\n    return () => {\n      cancel = true\n      stopPollingBalance()\n      setBalance(NO_BALANCE)\n    }\n  }, [account, ethereum, pollBalanceInterval])\n\n  return balance\n}\n\n// Only watch block numbers, and return functions allowing to subscribe to it.\nfunction useWatchBlockNumber({\n  ethereum,\n  pollBlockNumberInterval,\n}: {\n  ethereum: EthereumProvider\n  pollBlockNumberInterval: number\n}) {\n  const lastBlockNumber = useRef<number | null>(null)\n\n  // Using listeners lets useWallet() decide if it wants to expose the block\n  // number, which implies to re-render whenever the block number updates.\n  const blockNumberListeners = useRef<Set<(blockNumber: number) => void>>(\n    new Set()\n  )\n\n  const addBlockNumberListener = useCallback((cb) => {\n    if (blockNumberListeners.current.has(cb)) {\n      return\n    }\n\n    // Immediately send the block number to the new listener\n    cb(lastBlockNumber.current)\n\n    // Add the listener\n    blockNumberListeners.current.add(cb)\n  }, [])\n\n  const removeBlockNumberListener = useCallback((cb) => {\n    blockNumberListeners.current.delete(cb)\n  }, [])\n\n  // Update the block number and broadcast it to the listeners\n  const updateBlockNumber = useCallback((blockNumber) => {\n    if (lastBlockNumber.current === blockNumber) {\n      return\n    }\n\n    lastBlockNumber.current = blockNumber\n    blockNumberListeners.current.forEach((cb) => cb(blockNumber))\n  }, [])\n\n  useEffect(() => {\n    if (!ethereum) {\n      updateBlockNumber(null)\n      return\n    }\n\n    let cancel = false\n\n    const pollBlockNumber = pollEvery(() => {\n      return {\n        request: () => getBlockNumber(ethereum),\n        onResult: (latestBlockNumber: number) => {\n          if (!cancel) {\n            updateBlockNumber(\n              latestBlockNumber === null\n                ? null\n                : JSBI.BigInt(latestBlockNumber).toString()\n            )\n          }\n        },\n      }\n    }, pollBlockNumberInterval)\n\n    const stopPollingBlockNumber = pollBlockNumber()\n\n    return () => {\n      cancel = true\n      stopPollingBlockNumber()\n    }\n  }, [ethereum, pollBlockNumberInterval, updateBlockNumber])\n\n  return { addBlockNumberListener, removeBlockNumberListener }\n}\n\nfunction UseWalletProvider({\n  chainId,\n  children,\n  // connectors contains init functions and/or connector configs.\n  connectors: connectorsInitsOrConfigs,\n  pollBalanceInterval,\n  pollBlockNumberInterval,\n}: UseWalletProviderProps) {\n  const walletContext = useContext(UseWalletContext)\n\n  if (walletContext !== null) {\n    throw new Error('<UseWalletProvider /> has already been declared.')\n  }\n\n  const [connector, setConnector] = useState<string | null>(null)\n  const [error, setError] = useState<Error | null>(null)\n  const [type, setType] = useState<AccountType | null>(null)\n  const [status, setStatus] = useState<Status>('disconnected')\n  const web3ReactContext = useWeb3React()\n  const activationId = useRef<number>(0)\n  const { account, library: ethereum } = web3ReactContext\n  const balance = useWalletBalance({ account, ethereum, pollBalanceInterval })\n  const { addBlockNumberListener, removeBlockNumberListener } =\n    useWatchBlockNumber({ ethereum, pollBlockNumberInterval })\n\n  // Combine the user-provided connectors with the default ones (see connectors.js).\n  const connectors = useMemo(\n    () => getConnectors(connectorsInitsOrConfigs),\n    [connectorsInitsOrConfigs]\n  )\n\n  const reset = useCallback(() => {\n    if (web3ReactContext.active) {\n      web3ReactContext.deactivate()\n    }\n    setConnector(null)\n    setError(null)\n    setStatus('disconnected')\n  }, [web3ReactContext])\n\n  const connect = useCallback(\n    async (connectorId = 'injected') => {\n      // Prevent race conditions between connections by using an external ID.\n      const id = ++activationId.current\n\n      reset()\n\n      // Check if another connection has happened right after deactivate().\n      if (id !== activationId.current) {\n        return\n      }\n\n      if (!connectors[connectorId]) {\n        setStatus('error')\n        setError(new ConnectorUnsupportedError(connectorId))\n        return\n      }\n\n      // If no connection happens, we're in the right context and can safely update\n      // the connection stage status\n      setStatus('connecting')\n\n      const [connectorInit, connectorConfig] = connectors[connectorId] || []\n\n      // Initialize the (useWallet) connector if it exists.\n      const connector = await connectorInit?.()\n\n      // Initialize the web3-react connector if it exists.\n      const web3ReactConnector = connector?.web3ReactConnector?.({\n        chainId,\n        ...(connectorConfig || {}),\n      })\n\n      if (!web3ReactConnector) {\n        setStatus('error')\n        setError(new ConnectorUnsupportedError(connectorId))\n        return\n      }\n\n      try {\n        // TODO: there is no way to prevent an activation to complete, but we\n        // could reconnect to the last provider the user tried to connect to.\n        setConnector(connectorId)\n        await web3ReactContext.activate(web3ReactConnector, undefined, true)\n        setStatus('connected')\n      } catch (err) {\n        // Don’t throw if another connection has happened in the meantime.\n        if (id !== activationId.current) {\n          return\n        }\n\n        // If not, the error has been thrown during the current connection attempt,\n        // so it's correct to indicate that there has been an error\n        setConnector(null)\n        setStatus('error')\n\n        if (err instanceof UnsupportedChainIdError) {\n          setError(new ChainUnsupportedError(-1, chainId))\n          return\n        }\n        // It might have thrown with an error known by the connector\n        if (connector.handleActivationError) {\n          const handledError = connector.handleActivationError(err)\n          if (handledError) {\n            setError(handledError)\n            return\n          }\n        }\n        // Otherwise, set to state the received error\n        setError(err)\n      }\n    },\n    [chainId, connectors, reset, web3ReactContext]\n  )\n\n  useEffect(() => {\n    if (!account || !ethereum) {\n      return\n    }\n\n    let cancel = false\n\n    setType(null)\n\n    getAccountIsContract(ethereum, account).then((isContract) => {\n      if (!cancel) {\n        setStatus('connected')\n        setType(isContract ? 'contract' : 'normal')\n      }\n    })\n\n    return () => {\n      cancel = true\n      setStatus('disconnected')\n      setType(null)\n    }\n  }, [account, ethereum])\n\n  const wallet = useMemo(\n    () => ({\n      _web3ReactContext: web3ReactContext,\n      account: account || null,\n      balance,\n      chainId,\n      connect,\n      connector,\n      connectors,\n      error,\n      ethereum,\n      networkName: getNetworkName(chainId),\n      reset,\n      status,\n      type,\n    }),\n    [\n      account,\n      balance,\n      chainId,\n      connect,\n      connector,\n      connectors,\n      error,\n      ethereum,\n      type,\n      reset,\n      status,\n      web3ReactContext,\n    ]\n  )\n\n  return (\n    <UseWalletContext.Provider\n      value={{\n        addBlockNumberListener,\n        pollBalanceInterval,\n        pollBlockNumberInterval,\n        removeBlockNumberListener,\n        wallet,\n      }}\n    >\n      {children}\n    </UseWalletContext.Provider>\n  )\n}\n\nUseWalletProvider.propTypes = {\n  chainId: PropTypes.number,\n  children: PropTypes.node,\n  connectors: PropTypes.objectOf(PropTypes.object),\n  pollBalanceInterval: PropTypes.number,\n  pollBlockNumberInterval: PropTypes.number,\n}\n\nUseWalletProvider.defaultProps = {\n  chainId: 1,\n  connectors: {},\n  pollBalanceInterval: 2000,\n  pollBlockNumberInterval: 5000,\n}\n\nfunction UseWalletProviderWrapper(props: UseWalletProviderProps) {\n  return (\n    <Web3ReactProvider getLibrary={(ethereum) => ethereum}>\n      <UseWalletProvider {...props} />\n    </Web3ReactProvider>\n  )\n}\n\nUseWalletProviderWrapper.propTypes = UseWalletProvider.propTypes\nUseWalletProviderWrapper.defaultProps = UseWalletProvider.defaultProps\n\nexport {\n  ConnectionRejectedError,\n  ChainUnsupportedError,\n  ConnectorUnsupportedError,\n  UseWalletProviderWrapper as UseWalletProvider,\n  useWallet,\n}\n\nexport default useWallet\n"]},"metadata":{},"sourceType":"module"}