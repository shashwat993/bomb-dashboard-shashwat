{"ast":null,"code":"var _jsxFileName = \"/home/shashwat/Projects/Intern/src/components/Popups/index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useActivePopups } from '../../state/application/hooks';\nimport PopupItem from './PopupItem';\nconst MobilePopupWrapper = styled.div`\n  position: relative;\n  max-width: 100%;\n  height: ${_ref => {\n  let {\n    height\n  } = _ref;\n  return height;\n}};\n  margin: ${_ref2 => {\n  let {\n    height\n  } = _ref2;\n  return height ? '0 auto;' : 0;\n}};\n  margin-bottom: ${_ref3 => {\n  let {\n    height\n  } = _ref3;\n  return height ? '20px' : 0;\n}}};\n\n  display: none;\n  @media (max-width: 768px) {\n    display: block;\n  };\n`;\nconst MobilePopupInner = styled.div`\n  height: 99%;\n  overflow-x: auto;\n  overflow-y: hidden;\n  display: flex;\n  flex-direction: row;\n  -webkit-overflow-scrolling: touch;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\nconst FixedPopupColumn = styled.div`\n  position: fixed;\n  top: 64px;\n  margin-right: 24px;\n  right: 3rem;\n  max-width: 355px !important;\n  width: 100%;\n  z-index: 2;\n\n  @media (max-width: 768px) {\n    display: none;\n  } ;\n`;\nexport default function Popups() {\n  // get all popups\n  const activePopups = useActivePopups();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FixedPopupColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, activePopups.map(item => /*#__PURE__*/React.createElement(PopupItem, {\n    key: item.key,\n    content: item.content,\n    popKey: item.key,\n    removeAfterMs: item.removeAfterMs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(MobilePopupWrapper, {\n    height: (activePopups === null || activePopups === void 0 ? void 0 : activePopups.length) > 0 ? 'fit-content' : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MobilePopupInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, activePopups // reverse so new items up front\n  .slice(0).reverse().map(item => /*#__PURE__*/React.createElement(PopupItem, {\n    key: item.key,\n    content: item.content,\n    popKey: item.key,\n    removeAfterMs: item.removeAfterMs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/src/components/Popups/index.tsx"],"names":["React","styled","useActivePopups","PopupItem","MobilePopupWrapper","div","height","MobilePopupInner","FixedPopupColumn","Popups","activePopups","map","item","key","content","removeAfterMs","length","slice","reverse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,eAAR,QAA8B,+BAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,kBAAkB,GAAGH,MAAM,CAACI,GAA+B;AACjE;AACA;AACA,YAAY;AAAA,MAAC;AAACC,IAAAA;AAAD,GAAD;AAAA,SAAcA,MAAd;AAAA,CAAqB;AACjC,YAAY;AAAA,MAAC;AAACA,IAAAA;AAAD,GAAD;AAAA,SAAeA,MAAM,GAAG,SAAH,GAAe,CAApC;AAAA,CAAuC;AACnD,mBAAmB;AAAA,MAAC;AAACA,IAAAA;AAAD,GAAD;AAAA,SAAeA,MAAM,GAAG,MAAH,GAAY,CAAjC;AAAA,CAAoC;AACvD;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMC,gBAAgB,GAAGN,MAAM,CAACI,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,MAAMG,gBAAgB,GAAGP,MAAM,CAACI,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,eAAe,SAASI,MAAT,GAAkB;AAC/B;AACA,QAAMC,YAAY,GAAGR,eAAe,EAApC;AAEA,sBACE,uDACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,YAAY,CAACC,GAAb,CAAkBC,IAAD,iBAChB,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,IAAI,CAACC,GAArB;AAA0B,IAAA,OAAO,EAAED,IAAI,CAACE,OAAxC;AAAiD,IAAA,MAAM,EAAEF,IAAI,CAACC,GAA9D;AAAmE,IAAA,aAAa,EAAED,IAAI,CAACG,aAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,eAME,oBAAC,kBAAD;AAAoB,IAAA,MAAM,EAAE,CAAAL,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEM,MAAd,IAAuB,CAAvB,GAA2B,aAA3B,GAA2C,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,YAAY,CAAC;AAAD,GACVO,KADF,CACQ,CADR,EAEEC,OAFF,GAGEP,GAHF,CAGOC,IAAD,iBACH,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,IAAI,CAACC,GAArB;AAA0B,IAAA,OAAO,EAAED,IAAI,CAACE,OAAxC;AAAiD,IAAA,MAAM,EAAEF,IAAI,CAACC,GAA9D;AAAmE,IAAA,aAAa,EAAED,IAAI,CAACG,aAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJH,CADH,CADF,CANF,CADF;AAmBD","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {useActivePopups} from '../../state/application/hooks';\nimport PopupItem from './PopupItem';\n\nconst MobilePopupWrapper = styled.div<{height: string | number}>`\n  position: relative;\n  max-width: 100%;\n  height: ${({height}) => height};\n  margin: ${({height}) => (height ? '0 auto;' : 0)};\n  margin-bottom: ${({height}) => (height ? '20px' : 0)}};\n\n  display: none;\n  @media (max-width: 768px) {\n    display: block;\n  };\n`;\n\nconst MobilePopupInner = styled.div`\n  height: 99%;\n  overflow-x: auto;\n  overflow-y: hidden;\n  display: flex;\n  flex-direction: row;\n  -webkit-overflow-scrolling: touch;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst FixedPopupColumn = styled.div`\n  position: fixed;\n  top: 64px;\n  margin-right: 24px;\n  right: 3rem;\n  max-width: 355px !important;\n  width: 100%;\n  z-index: 2;\n\n  @media (max-width: 768px) {\n    display: none;\n  } ;\n`;\n\nexport default function Popups() {\n  // get all popups\n  const activePopups = useActivePopups();\n\n  return (\n    <>\n      <FixedPopupColumn>\n        {activePopups.map((item) => (\n          <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\n        ))}\n      </FixedPopupColumn>\n      <MobilePopupWrapper height={activePopups?.length > 0 ? 'fit-content' : 0}>\n        <MobilePopupInner>\n          {activePopups // reverse so new items up front\n            .slice(0)\n            .reverse()\n            .map((item) => (\n              <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\n            ))}\n        </MobilePopupInner>\n      </MobilePopupWrapper>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}