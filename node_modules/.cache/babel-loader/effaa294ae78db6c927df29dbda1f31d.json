{"ast":null,"code":"var _jsxFileName = \"/home/shashwat/Projects/Intern/src/views/Stake/components/Stake.tsx\";\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Box, Button, Card, CardContent } from '@material-ui/core'; // import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\n\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value'; //import useXbombBalance from '../../../hooks/useXbombBalance';\n\nimport useBombStats from '../../../hooks/useBombStats';\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport MetamaskFox from \"../../../assets/img/metamask-fox.svg\";\nimport { getDisplayBalance } from '../../../utils/formatBalance';\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport useBombFinance from '../../../hooks/useBombFinance'; //import useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';   //May not be needed anymore.\n\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport useStakeToBomb from '../../../hooks/useStakeToBomb';\nimport useWithdrawFromBomb from '../../../hooks/useWithdrawFromBomb';\nimport useXbombBalance from '../../../hooks/useXbombBalance';\n\nconst Stake = () => {\n  const bombFinance = useBombFinance();\n  const bombStats = useBombStats();\n  const [approveStatus, approve] = useApprove(bombFinance.BOMB, bombFinance.contracts.xBOMB.address);\n  const tokenBalance = useTokenBalance(bombFinance.BOMB); //const stakedBalance = useStakedBomb();\n\n  const stakedBalance = useTokenBalance(bombFinance.XBOMB);\n  const xbombBalance = useXbombBalance();\n  const xbombRate = Number(xbombBalance) / 1000000000000000000;\n  const xbombToBombEquivalent = Number(getDisplayBalance(stakedBalance)) * xbombRate;\n  const bombPriceInDollars = useMemo(() => bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null, [bombStats]);\n  const stakedTokenPriceInDollars = Number(bombPriceInDollars) * xbombRate;\n  const tokenPriceInDollars = useMemo(() => {\n    return stakedTokenPriceInDollars ? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance))).toFixed(2).toString() : null;\n  }, [stakedTokenPriceInDollars, stakedBalance]); // const isOldBoardroomMember = boardroomVersion !== 'latest';\n\n  const {\n    onStake\n  } = useStakeToBomb();\n  const {\n    onWithdraw\n  } = useWithdrawFromBomb();\n  const [onPresentDeposit, onDismissDeposit] = useModal( /*#__PURE__*/React.createElement(DepositModal, {\n    max: tokenBalance,\n    onConfirm: value => {\n      onStake(value);\n      onDismissDeposit();\n    },\n    tokenName: 'BOMB',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }));\n  const [onPresentWithdraw, onDismissWithdraw] = useModal( /*#__PURE__*/React.createElement(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: value => {\n      onWithdraw(value);\n      onDismissWithdraw();\n    },\n    tokenName: 'xBOMB',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TokenSymbol, {\n    symbol: \"XBOMB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: 'shinyButton',\n    onClick: () => {\n      bombFinance.watchAssetInMetamask('XBOMB');\n    },\n    style: {\n      position: 'static',\n      top: '10px',\n      right: '10px',\n      border: '1px grey solid',\n      paddingBottom: '5px',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"+\"), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"metamask fox\",\n    style: {\n      width: '20px',\n      filter: 'grayscale(100%)'\n    },\n    src: MetamaskFox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Value, {\n    value: getDisplayBalance(stakedBalance),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: 'xBOMB Balance',\n    variant: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: `â‰ˆ ${xbombToBombEquivalent.toFixed(2)} BOMB / $${tokenPriceInDollars}`,\n    variant: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, approveStatus !== ApprovalState.APPROVED ? /*#__PURE__*/React.createElement(Button, {\n    disabled: approveStatus !== ApprovalState.NOT_APPROVED,\n    className: approveStatus === ApprovalState.NOT_APPROVED ? 'shinyButton' : 'shinyButtonDisabled',\n    style: {\n      marginTop: '20px'\n    },\n    onClick: approve,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Approve BOMB\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onPresentWithdraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(RemoveIcon, {\n    color: 'yellow',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(StyledActionSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onPresentDeposit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    color: 'yellow',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }))))))));\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 28px;\n  width: 100%;\n`;\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport default Stake;","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/src/views/Stake/components/Stake.tsx"],"names":["React","useMemo","styled","Box","Button","Card","CardContent","CardIcon","AddIcon","RemoveIcon","IconButton","Label","Value","useBombStats","useApprove","ApprovalState","useModal","useTokenBalance","getDisplayBalance","DepositModal","WithdrawModal","useBombFinance","TokenSymbol","useStakeToBomb","useWithdrawFromBomb","useXbombBalance","Stake","bombFinance","bombStats","approveStatus","approve","BOMB","contracts","xBOMB","address","tokenBalance","stakedBalance","XBOMB","xbombBalance","xbombRate","Number","xbombToBombEquivalent","bombPriceInDollars","priceInDollars","toFixed","stakedTokenPriceInDollars","tokenPriceInDollars","toString","onStake","onWithdraw","onPresentDeposit","onDismissDeposit","value","onPresentWithdraw","onDismissWithdraw","watchAssetInMetamask","position","top","right","border","paddingBottom","marginBottom","width","filter","MetamaskFox","APPROVED","NOT_APPROVED","marginTop","StyledCardHeader","div","StyledCardActions","StyledActionSpacer","props","theme","spacing","StyledCardContentInner"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { Box, Button, Card, CardContent } from '@material-ui/core';\n\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\n//import useXbombBalance from '../../../hooks/useXbombBalance';\nimport useBombStats from '../../../hooks/useBombStats';\nimport useApprove, {ApprovalState} from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport MetamaskFox from '../../../assets/img/metamask-fox.svg';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport useBombFinance from '../../../hooks/useBombFinance';\n//import useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';   //May not be needed anymore.\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport useStakeToBomb from '../../../hooks/useStakeToBomb';\nimport useWithdrawFromBomb from '../../../hooks/useWithdrawFromBomb';\nimport useXbombBalance from '../../../hooks/useXbombBalance';\n\nconst Stake: React.FC = () => {\n  const bombFinance = useBombFinance();\n  const bombStats = useBombStats();\n\n  const [approveStatus, approve] = useApprove(bombFinance.BOMB, bombFinance.contracts.xBOMB.address);\n\n\n\n  const tokenBalance = useTokenBalance(bombFinance.BOMB);\n  //const stakedBalance = useStakedBomb();\n  const stakedBalance = useTokenBalance(bombFinance.XBOMB);\n\n  const xbombBalance = useXbombBalance();\n  const xbombRate = Number(xbombBalance) / 1000000000000000000;\n  const xbombToBombEquivalent = Number(getDisplayBalance(stakedBalance)) * xbombRate;\n\n  const bombPriceInDollars = useMemo(\n    () => (bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null),\n    [bombStats],\n  );\n\n  const stakedTokenPriceInDollars = Number(bombPriceInDollars) * xbombRate;\n\n  const tokenPriceInDollars = useMemo(\n    () => {\n      return stakedTokenPriceInDollars\n        ? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance))).toFixed(2).toString()\n        : null;\n    },\n    [stakedTokenPriceInDollars, stakedBalance],\n  );\n  // const isOldBoardroomMember = boardroomVersion !== 'latest';\n\n  const { onStake } = useStakeToBomb();\n  const { onWithdraw } = useWithdrawFromBomb();\n\n  const [onPresentDeposit, onDismissDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={(value) => {\n        onStake(value);\n        onDismissDeposit();\n      }}\n      tokenName={'BOMB'}\n    />,\n  );\n\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={(value) => {\n        onWithdraw(value);\n        onDismissWithdraw();\n      }}\n      tokenName={'xBOMB'}\n    />,\n  );\n\n  return (\n    <Box>\n      <Card>\n        <CardContent>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <CardIcon>\n                <TokenSymbol symbol=\"XBOMB\" />\n              </CardIcon>\n\n              <Button\n                className={'shinyButton'}\n                onClick={() => {\n                  bombFinance.watchAssetInMetamask('XBOMB');\n                }}\n                style={{\n                  position: 'static',\n                  top: '10px',\n                  right: '10px',\n                  border: '1px grey solid',\n                  paddingBottom: '5px',\n                  marginBottom: '20px',\n                }}\n              >\n                {' '}\n                <b>+</b>&nbsp;&nbsp;\n                <img alt=\"metamask fox\" style={{ width: '20px', filter: 'grayscale(100%)' }} src={MetamaskFox} />\n              </Button>\n              <Value value={getDisplayBalance(stakedBalance)} />\n              <Label text={'xBOMB Balance'} variant=\"yellow\" />\n              <Label text={`â‰ˆ ${xbombToBombEquivalent.toFixed(2)} BOMB / $${tokenPriceInDollars}`} variant=\"yellow\" />\n            </StyledCardHeader>\n            <StyledCardActions>\n              {approveStatus !== ApprovalState.APPROVED ? (\n                <Button\n                  disabled={approveStatus !== ApprovalState.NOT_APPROVED}\n                  className={approveStatus === ApprovalState.NOT_APPROVED ? 'shinyButton' : 'shinyButtonDisabled'}\n                  style={{ marginTop: '20px' }}\n                  onClick={approve}\n                >\n                  Approve BOMB\n                </Button>\n              ) : (\n                <>\n                  <IconButton onClick={onPresentWithdraw}>\n                    <RemoveIcon color={'yellow'} />\n                  </IconButton>\n                  <StyledActionSpacer />\n                  <IconButton onClick={onPresentDeposit}>\n                    <AddIcon color={'yellow'} />\n                  </IconButton>\n                </>\n              )}\n            </StyledCardActions>\n          </StyledCardContentInner>\n        </CardContent>\n      </Card>\n      {/* <Box mt={2} style={{color: '#FFF'}}>\n        {canWithdrawFromBoardroom ? (\n          ''\n        ) : (\n          <Card>\n            <CardContent>\n              <Typography style={{textAlign: 'center'}}>Withdraw possible in</Typography>\n              <ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Withdraw available in\" />\n            </CardContent>\n          </Card>\n        )}\n      </Box> */}\n    </Box>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 28px;\n  width: 100%;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Stake;\n"]},"metadata":{},"sourceType":"module"}