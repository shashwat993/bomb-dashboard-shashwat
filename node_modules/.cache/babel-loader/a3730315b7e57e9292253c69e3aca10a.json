{"ast":null,"code":"var _jsxFileName = \"/home/shashwat/Projects/Dyeus/src/contexts/Modals/Modals.tsx\";\nimport React, { createContext, useCallback, useState } from 'react';\nimport styled from 'styled-components';\nexport const Context = createContext({\n  onPresent: () => {},\n  onDismiss: () => {}\n});\n\nconst Modals = _ref => {\n  let {\n    children\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [content, setContent] = useState();\n  const handlePresent = useCallback(modalContent => {\n    setContent(modalContent);\n    setIsOpen(true);\n  }, [setContent, setIsOpen]);\n  const handleDismiss = useCallback(() => {\n    setContent(undefined);\n    setIsOpen(false);\n  }, [setContent, setIsOpen]);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      content,\n      isOpen,\n      onPresent: handlePresent,\n      onDismiss: handleDismiss\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, children, isOpen && /*#__PURE__*/React.createElement(StyledModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledModalBackdrop, {\n    onClick: handleDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), React.isValidElement(content) && React.cloneElement(content, {\n    onDismiss: handleDismiss\n  })));\n};\n\nconst StyledModalWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\nconst StyledModalBackdrop = styled.div`\n  background-color: #00000088;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\nexport default Modals;","map":{"version":3,"sources":["/home/shashwat/Projects/Dyeus/src/contexts/Modals/Modals.tsx"],"names":["React","createContext","useCallback","useState","styled","Context","onPresent","onDismiss","Modals","children","isOpen","setIsOpen","content","setContent","handlePresent","modalContent","handleDismiss","undefined","isValidElement","cloneElement","StyledModalWrapper","div","StyledModalBackdrop"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,WAA9B,EAA2CC,QAA3C,QAA0D,OAA1D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AASA,OAAO,MAAMC,OAAO,GAAGJ,aAAa,CAAgB;AAClDK,EAAAA,SAAS,EAAE,MAAM,CAAE,CAD+B;AAElDC,EAAAA,SAAS,EAAE,MAAM,CAAE;AAF+B,CAAhB,CAA7B;;AAKP,MAAMC,MAAgB,GAAG,QAAgB;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AAEA,QAAMW,aAAa,GAAGZ,WAAW,CAC9Ba,YAAD,IAAmC;AACjCF,IAAAA,UAAU,CAACE,YAAD,CAAV;AACAJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAJ8B,EAK/B,CAACE,UAAD,EAAaF,SAAb,CAL+B,CAAjC;AAQA,QAAMK,aAAa,GAAGd,WAAW,CAAC,MAAM;AACtCW,IAAAA,UAAU,CAACI,SAAD,CAAV;AACAN,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHgC,EAG9B,CAACE,UAAD,EAAaF,SAAb,CAH8B,CAAjC;AAKA,sBACE,oBAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OADK;AAELF,MAAAA,MAFK;AAGLJ,MAAAA,SAAS,EAAEQ,aAHN;AAILP,MAAAA,SAAS,EAAES;AAJN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGP,QARH,EASGC,MAAM,iBACL,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEM,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGhB,KAAK,CAACkB,cAAN,CAAqBN,OAArB,KACCZ,KAAK,CAACmB,YAAN,CAAmBP,OAAnB,EAA4B;AAC1BL,IAAAA,SAAS,EAAES;AADe,GAA5B,CAHJ,CAVJ,CADF;AAqBD,CAtCD;;AAwCA,MAAMI,kBAAkB,GAAGhB,MAAM,CAACiB,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMC,mBAAmB,GAAGlB,MAAM,CAACiB,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAeb,MAAf","sourcesContent":["import React, {createContext, useCallback, useState} from 'react';\nimport styled from 'styled-components';\n\ninterface ModalsContext {\n  content?: React.ReactNode;\n  isOpen?: boolean;\n  onPresent: (content: React.ReactNode) => void;\n  onDismiss: () => void;\n}\n\nexport const Context = createContext<ModalsContext>({\n  onPresent: () => {},\n  onDismiss: () => {},\n});\n\nconst Modals: React.FC = ({children}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [content, setContent] = useState<React.ReactNode>();\n\n  const handlePresent = useCallback(\n    (modalContent: React.ReactNode) => {\n      setContent(modalContent);\n      setIsOpen(true);\n    },\n    [setContent, setIsOpen],\n  );\n\n  const handleDismiss = useCallback(() => {\n    setContent(undefined);\n    setIsOpen(false);\n  }, [setContent, setIsOpen]);\n\n  return (\n    <Context.Provider\n      value={{\n        content,\n        isOpen,\n        onPresent: handlePresent,\n        onDismiss: handleDismiss,\n      }}\n    >\n      {children}\n      {isOpen && (\n        <StyledModalWrapper>\n          <StyledModalBackdrop onClick={handleDismiss} />\n          {React.isValidElement(content) &&\n            React.cloneElement(content, {\n              onDismiss: handleDismiss,\n            })}\n        </StyledModalWrapper>\n      )}\n    </Context.Provider>\n  );\n};\n\nconst StyledModalWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\nconst StyledModalBackdrop = styled.div`\n  background-color: #00000088;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\nexport default Modals;\n"]},"metadata":{},"sourceType":"module"}