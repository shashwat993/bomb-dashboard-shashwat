{"ast":null,"code":"var _jsxFileName = \"/home/shashwat/Projects/Intern/src/contexts/BombFinanceProvider/BombFinanceProvider.tsx\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport BombFinance from '../../bomb-finance';\nimport config from '../../config';\nexport const Context = createContext({\n  bombFinance: null\n});\nexport const BombFinanceProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const {\n    ethereum,\n    account\n  } = useWallet();\n  const [bombFinance, setBombFinance] = useState();\n  useEffect(() => {\n    if (!bombFinance) {\n      const bomb = new BombFinance(config);\n\n      if (account) {\n        // wallet was unlocked at initialization\n        bomb.unlockWallet(ethereum, account);\n      }\n\n      setBombFinance(bomb);\n    } else if (account) {\n      bombFinance.unlockWallet(ethereum, account);\n    }\n  }, [account, ethereum, bombFinance]);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      bombFinance\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/src/contexts/BombFinanceProvider/BombFinanceProvider.tsx"],"names":["React","createContext","useEffect","useState","useWallet","BombFinance","config","Context","bombFinance","BombFinanceProvider","children","ethereum","account","setBombFinance","bomb","unlockWallet"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAMA,OAAO,MAAMC,OAAO,GAAGN,aAAa,CAAqB;AAACO,EAAAA,WAAW,EAAE;AAAd,CAArB,CAA7B;AAEP,OAAO,MAAMC,mBAA6B,GAAG,QAAgB;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC3D,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAsBR,SAAS,EAArC;AACA,QAAM,CAACI,WAAD,EAAcK,cAAd,IAAgCV,QAAQ,EAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,WAAL,EAAkB;AAChB,YAAMM,IAAI,GAAG,IAAIT,WAAJ,CAAgBC,MAAhB,CAAb;;AACA,UAAIM,OAAJ,EAAa;AACX;AACAE,QAAAA,IAAI,CAACC,YAAL,CAAkBJ,QAAlB,EAA4BC,OAA5B;AACD;;AACDC,MAAAA,cAAc,CAACC,IAAD,CAAd;AACD,KAPD,MAOO,IAAIF,OAAJ,EAAa;AAClBJ,MAAAA,WAAW,CAACO,YAAZ,CAAyBJ,QAAzB,EAAmCC,OAAnC;AACD;AACF,GAXQ,EAWN,CAACA,OAAD,EAAUD,QAAV,EAAoBH,WAApB,CAXM,CAAT;AAaA,sBAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACA,MAAAA;AAAD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCE,QAAzC,CAAP;AACD,CAlBM","sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\nimport {useWallet} from 'use-wallet';\nimport BombFinance from '../../bomb-finance';\nimport config from '../../config';\n\nexport interface BombFinanceContext {\n  bombFinance?: BombFinance;\n}\n\nexport const Context = createContext<BombFinanceContext>({bombFinance: null});\n\nexport const BombFinanceProvider: React.FC = ({children}) => {\n  const {ethereum, account} = useWallet();\n  const [bombFinance, setBombFinance] = useState<BombFinance>();\n\n  useEffect(() => {\n    if (!bombFinance) {\n      const bomb = new BombFinance(config);\n      if (account) {\n        // wallet was unlocked at initialization\n        bomb.unlockWallet(ethereum, account);\n      }\n      setBombFinance(bomb);\n    } else if (account) {\n      bombFinance.unlockWallet(ethereum, account);\n    }\n  }, [account, ethereum, bombFinance]);\n\n  return <Context.Provider value={{bombFinance}}>{children}</Context.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}