{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useCashPriceInEstimatedTWAP = () => {\n  const [stat, setStat] = useState();\n  const bombFinance = useBombFinance();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    async function fetchCashPrice() {\n      try {\n        setStat(await bombFinance.getBombStatInEstimatedTWAP());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetchCashPrice();\n  }, [setStat, bombFinance, slowRefresh]);\n  return stat;\n};\n\nexport default useCashPriceInEstimatedTWAP;","map":{"version":3,"sources":["/home/shashwat/Projects/Dyeus/src/hooks/useCashPriceInEstimatedTWAP.ts"],"names":["useEffect","useState","useBombFinance","useRefresh","useCashPriceInEstimatedTWAP","stat","setStat","bombFinance","slowRefresh","fetchCashPrice","getBombStatInEstimatedTWAP","err","console","error"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,2BAA2B,GAAG,MAAM;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AACA,QAAMM,WAAW,GAAGL,cAAc,EAAlC;AACA,QAAM;AAACM,IAAAA;AAAD,MAAgBL,UAAU,EAAhC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,cAAf,GAAgC;AAC9B,UAAI;AACFH,QAAAA,OAAO,CAAC,MAAMC,WAAW,CAACG,0BAAZ,EAAP,CAAP;AACD,OAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF;;AACDF,IAAAA,cAAc;AACf,GATQ,EASN,CAACH,OAAD,EAAUC,WAAV,EAAuBC,WAAvB,CATM,CAAT;AAWA,SAAOH,IAAP;AACD,CAjBD;;AAmBA,eAAeD,2BAAf","sourcesContent":["import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {TokenStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useCashPriceInEstimatedTWAP = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n\n  useEffect(() => {\n    async function fetchCashPrice() {\n      try {\n        setStat(await bombFinance.getBombStatInEstimatedTWAP());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchCashPrice();\n  }, [setStat, bombFinance, slowRefresh]);\n\n  return stat;\n};\n\nexport default useCashPriceInEstimatedTWAP;\n"]},"metadata":{},"sourceType":"module"}