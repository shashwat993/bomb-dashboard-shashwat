{"ast":null,"code":"import { useCallback } from 'react';\nimport useBombFinance from './useBombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\nimport { parseUnits } from 'ethers/lib/utils';\n\nconst useWithdraw = bank => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n  const handleWithdraw = useCallback(amount => {\n    const amountBn = parseUnits(amount, bank.depositToken.decimal);\n    handleTransactionReceipt(bombFinance.unstake(bank.contract, bank.poolId, amountBn), `Withdraw ${amount} ${bank.depositTokenName} from ${bank.contract}`);\n  }, [bank, bombFinance, handleTransactionReceipt]);\n  return {\n    onWithdraw: handleWithdraw\n  };\n};\n\nexport default useWithdraw;","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/src/hooks/useWithdraw.ts"],"names":["useCallback","useBombFinance","useHandleTransactionReceipt","parseUnits","useWithdraw","bank","bombFinance","handleTransactionReceipt","handleWithdraw","amount","amountBn","depositToken","decimal","unstake","contract","poolId","depositTokenName","onWithdraw"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,2BAAP,MAAwC,+BAAxC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAEA,MAAMC,WAAW,GAAIC,IAAD,IAAgB;AAClC,QAAMC,WAAW,GAAGL,cAAc,EAAlC;AACA,QAAMM,wBAAwB,GAAGL,2BAA2B,EAA5D;AAEA,QAAMM,cAAc,GAAGR,WAAW,CAC/BS,MAAD,IAAoB;AAClB,UAAMC,QAAQ,GAAGP,UAAU,CAACM,MAAD,EAASJ,IAAI,CAACM,YAAL,CAAkBC,OAA3B,CAA3B;AACAL,IAAAA,wBAAwB,CACtBD,WAAW,CAACO,OAAZ,CAAoBR,IAAI,CAACS,QAAzB,EAAmCT,IAAI,CAACU,MAAxC,EAAgDL,QAAhD,CADsB,EAErB,YAAWD,MAAO,IAAGJ,IAAI,CAACW,gBAAiB,SAAQX,IAAI,CAACS,QAAS,EAF5C,CAAxB;AAID,GAP+B,EAQhC,CAACT,IAAD,EAAOC,WAAP,EAAoBC,wBAApB,CARgC,CAAlC;AAUA,SAAO;AAACU,IAAAA,UAAU,EAAET;AAAb,GAAP;AACD,CAfD;;AAiBA,eAAeJ,WAAf","sourcesContent":["import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {Bank} from '../bomb-finance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\nimport {parseUnits} from 'ethers/lib/utils';\n\nconst useWithdraw = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleWithdraw = useCallback(\n    (amount: string) => {\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\n      handleTransactionReceipt(\n        bombFinance.unstake(bank.contract, bank.poolId, amountBn),\n        `Withdraw ${amount} ${bank.depositTokenName} from ${bank.contract}`,\n      );\n    },\n    [bank, bombFinance, handleTransactionReceipt],\n  );\n  return {onWithdraw: handleWithdraw};\n};\n\nexport default useWithdraw;\n"]},"metadata":{},"sourceType":"module"}