{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useSuppliedBombBalance = () => {\n  const {\n    slowRefresh\n  } = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await bombFinance.getTotalSuppliedBomb());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    fetchBalance();\n  }, [slowRefresh, bombFinance]);\n  return balance;\n};\n\nexport default useSuppliedBombBalance;","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/src/hooks/useTotalSuppliedBombBalance.ts"],"names":["useEffect","useState","BigNumber","useBombFinance","useRefresh","useSuppliedBombBalance","slowRefresh","balance","setBalance","from","bombFinance","fetchBalance","getTotalSuppliedBomb","e","console","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,sBAAsB,GAAG,MAAM;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAkBF,UAAU,EAAlC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACC,SAAS,CAACO,IAAV,CAAe,CAAf,CAAD,CAAtC;AACA,QAAMC,WAAW,GAAGP,cAAc,EAAlC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,YAAf,GAA8B;AAC5B,UAAI;AACFH,QAAAA,UAAU,CAAC,MAAME,WAAW,CAACE,oBAAZ,EAAP,CAAV;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;;AACDF,IAAAA,YAAY;AACb,GATQ,EASN,CAACL,WAAD,EAAcI,WAAd,CATM,CAAT;AAUA,SAAOH,OAAP;AACD,CAfD;;AAiBA,eAAeF,sBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useSuppliedBombBalance = () => {\n  const { slowRefresh } = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await bombFinance.getTotalSuppliedBomb());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    fetchBalance();\n  }, [slowRefresh, bombFinance]);\n  return balance;\n};\n\nexport default useSuppliedBombBalance;\n"]},"metadata":{},"sourceType":"module"}