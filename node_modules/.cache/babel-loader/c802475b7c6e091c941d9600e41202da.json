{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLink = void 0;\n\nconst WalletLinkAnalytics_1 = require(\"./connection/WalletLinkAnalytics\");\n\nconst ScopedLocalStorage_1 = require(\"./lib/ScopedLocalStorage\");\n\nconst WalletLinkProvider_1 = require(\"./provider/WalletLinkProvider\");\n\nconst WalletLinkSdkUI_1 = require(\"./provider/WalletLinkSdkUI\");\n\nconst WalletLinkRelay_1 = require(\"./relay/WalletLinkRelay\");\n\nconst WalletLinkRelayEventManager_1 = require(\"./relay/WalletLinkRelayEventManager\");\n\nconst util_1 = require(\"./util\");\n\nconst WALLETLINK_URL = process.env.WALLETLINK_URL || \"https://www.walletlink.org\";\nconst WALLETLINK_VERSION = process.env.WALLETLINK_VERSION || require(\"../package.json\").version || \"unknown\";\n\nclass WalletLink {\n  /**\n   * Constructor\n   * @param options WalletLink options object\n   */\n  constructor(options) {\n    var _a;\n\n    this._appName = \"\";\n    this._appLogoUrl = null;\n    this._relay = null;\n    this._relayEventManager = null;\n    const walletLinkUrl = options.walletLinkUrl || WALLETLINK_URL;\n    let walletLinkUIConstructor;\n\n    if (!options.walletLinkUIConstructor) {\n      walletLinkUIConstructor = opts => new WalletLinkSdkUI_1.WalletLinkSdkUI(opts);\n    } else {\n      walletLinkUIConstructor = options.walletLinkUIConstructor;\n    }\n\n    if (typeof options.overrideIsMetaMask === \"undefined\") {\n      this._overrideIsMetaMask = false;\n    } else {\n      this._overrideIsMetaMask = options.overrideIsMetaMask;\n    }\n\n    this._overrideIsCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    this._walletLinkAnalytics = options.walletLinkAnalytics ? options.walletLinkAnalytics : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n    const u = new URL(walletLinkUrl);\n    const walletLinkOrigin = `${u.protocol}//${u.host}`;\n    this._storage = new ScopedLocalStorage_1.ScopedLocalStorage(`-walletlink:${walletLinkOrigin}`);\n\n    this._storage.setItem(\"version\", WalletLink.VERSION);\n\n    if (typeof window.walletLinkExtension !== \"undefined\") {\n      return;\n    }\n\n    this._relayEventManager = new WalletLinkRelayEventManager_1.WalletLinkRelayEventManager();\n    this._relay = new WalletLinkRelay_1.WalletLinkRelay({\n      walletLinkUrl,\n      version: WALLETLINK_VERSION,\n      darkMode: !!options.darkMode,\n      walletLinkUIConstructor,\n      storage: this._storage,\n      relayEventManager: this._relayEventManager,\n      walletLinkAnalytics: this._walletLinkAnalytics\n    });\n    this.setAppInfo(options.appName, options.appLogoUrl);\n\n    this._relay.attachUI();\n  }\n  /**\n   * Create a Web3 Provider object\n   * @param jsonRpcUrl Ethereum JSON RPC URL (Default: \"\")\n   * @param chainId Ethereum Chain ID (Default: 1)\n   * @returns A Web3 Provider\n   */\n\n\n  makeWeb3Provider() {\n    let jsonRpcUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let chainId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    if (typeof window.walletLinkExtension !== \"undefined\") {\n      if (\n      /* eslint-disable @typescript-eslint/ban-ts-comment */\n      // @ts-ignore\n      typeof window.walletLinkExtension.isCipher !== \"boolean\" || // @ts-ignore\n      !window.walletLinkExtension.isCipher\n      /* eslint-enable @typescript-eslint/ban-ts-comment */\n      ) {\n        window.walletLinkExtension.setProviderInfo(jsonRpcUrl, chainId);\n      }\n\n      return window.walletLinkExtension;\n    }\n\n    const relay = this._relay;\n\n    if (!relay || !this._relayEventManager || !this._storage) {\n      throw new Error(\"Relay not initialized, should never happen\");\n    }\n\n    if (!jsonRpcUrl) relay.setConnectDisabled(true);\n    return new WalletLinkProvider_1.WalletLinkProvider({\n      relayProvider: () => Promise.resolve(relay),\n      relayEventManager: this._relayEventManager,\n      storage: this._storage,\n      jsonRpcUrl,\n      chainId,\n      walletLinkAnalytics: this._walletLinkAnalytics,\n      overrideIsMetaMask: this._overrideIsMetaMask,\n      overrideIsCoinbaseWallet: this._overrideIsCoinbaseWallet\n    });\n  }\n  /**\n   * Set application information\n   * @param appName Application name\n   * @param appLogoUrl Application logo image URL\n   */\n\n\n  setAppInfo(appName, appLogoUrl) {\n    var _a;\n\n    this._appName = appName || \"DApp\";\n    this._appLogoUrl = appLogoUrl || (0, util_1.getFavicon)();\n\n    if (typeof window.walletLinkExtension !== \"undefined\") {\n      if (\n      /* eslint-disable @typescript-eslint/ban-ts-comment */\n      // @ts-ignore\n      typeof window.walletLinkExtension.isCipher !== \"boolean\" || // @ts-ignore\n      !window.walletLinkExtension.isCipher\n      /* eslint-enable @typescript-eslint/ban-ts-comment */\n      ) {\n        window.walletLinkExtension.setAppInfo(this._appName, this._appLogoUrl);\n      }\n    } else {\n      (_a = this._relay) === null || _a === void 0 ? void 0 : _a.setAppInfo(this._appName, this._appLogoUrl);\n    }\n  }\n  /**\n   * Disconnect. After disconnecting, this will reload the web page to ensure\n   * all potential stale state is cleared.\n   */\n\n\n  disconnect() {\n    var _a;\n\n    if (typeof window.walletLinkExtension !== \"undefined\") {\n      window.walletLinkExtension.close();\n    } else {\n      (_a = this._relay) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n    }\n  }\n\n}\n\nexports.WalletLink = WalletLink;\n/**\n * WalletLink version\n */\n\nWalletLink.VERSION = WALLETLINK_VERSION;","map":{"version":3,"sources":["/home/shashwat/Projects/Dyeus/node_modules/walletlink/dist/WalletLink.js"],"names":["Object","defineProperty","exports","value","WalletLink","WalletLinkAnalytics_1","require","ScopedLocalStorage_1","WalletLinkProvider_1","WalletLinkSdkUI_1","WalletLinkRelay_1","WalletLinkRelayEventManager_1","util_1","WALLETLINK_URL","process","env","WALLETLINK_VERSION","version","constructor","options","_a","_appName","_appLogoUrl","_relay","_relayEventManager","walletLinkUrl","walletLinkUIConstructor","opts","WalletLinkSdkUI","overrideIsMetaMask","_overrideIsMetaMask","_overrideIsCoinbaseWallet","overrideIsCoinbaseWallet","_walletLinkAnalytics","walletLinkAnalytics","WalletLinkAnalytics","u","URL","walletLinkOrigin","protocol","host","_storage","ScopedLocalStorage","setItem","VERSION","window","walletLinkExtension","WalletLinkRelayEventManager","WalletLinkRelay","darkMode","storage","relayEventManager","setAppInfo","appName","appLogoUrl","attachUI","makeWeb3Provider","jsonRpcUrl","chainId","isCipher","setProviderInfo","relay","Error","setConnectDisabled","WalletLinkProvider","relayProvider","Promise","resolve","getFavicon","disconnect","close","resetAndReload"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLink = void 0;\nconst WalletLinkAnalytics_1 = require(\"./connection/WalletLinkAnalytics\");\nconst ScopedLocalStorage_1 = require(\"./lib/ScopedLocalStorage\");\nconst WalletLinkProvider_1 = require(\"./provider/WalletLinkProvider\");\nconst WalletLinkSdkUI_1 = require(\"./provider/WalletLinkSdkUI\");\nconst WalletLinkRelay_1 = require(\"./relay/WalletLinkRelay\");\nconst WalletLinkRelayEventManager_1 = require(\"./relay/WalletLinkRelayEventManager\");\nconst util_1 = require(\"./util\");\nconst WALLETLINK_URL = process.env.WALLETLINK_URL || \"https://www.walletlink.org\";\nconst WALLETLINK_VERSION = process.env.WALLETLINK_VERSION ||\n    require(\"../package.json\").version ||\n    \"unknown\";\nclass WalletLink {\n    /**\n     * Constructor\n     * @param options WalletLink options object\n     */\n    constructor(options) {\n        var _a;\n        this._appName = \"\";\n        this._appLogoUrl = null;\n        this._relay = null;\n        this._relayEventManager = null;\n        const walletLinkUrl = options.walletLinkUrl || WALLETLINK_URL;\n        let walletLinkUIConstructor;\n        if (!options.walletLinkUIConstructor) {\n            walletLinkUIConstructor = opts => new WalletLinkSdkUI_1.WalletLinkSdkUI(opts);\n        }\n        else {\n            walletLinkUIConstructor = options.walletLinkUIConstructor;\n        }\n        if (typeof options.overrideIsMetaMask === \"undefined\") {\n            this._overrideIsMetaMask = false;\n        }\n        else {\n            this._overrideIsMetaMask = options.overrideIsMetaMask;\n        }\n        this._overrideIsCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        this._walletLinkAnalytics = options.walletLinkAnalytics\n            ? options.walletLinkAnalytics\n            : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n        const u = new URL(walletLinkUrl);\n        const walletLinkOrigin = `${u.protocol}//${u.host}`;\n        this._storage = new ScopedLocalStorage_1.ScopedLocalStorage(`-walletlink:${walletLinkOrigin}`);\n        this._storage.setItem(\"version\", WalletLink.VERSION);\n        if (typeof window.walletLinkExtension !== \"undefined\") {\n            return;\n        }\n        this._relayEventManager = new WalletLinkRelayEventManager_1.WalletLinkRelayEventManager();\n        this._relay = new WalletLinkRelay_1.WalletLinkRelay({\n            walletLinkUrl,\n            version: WALLETLINK_VERSION,\n            darkMode: !!options.darkMode,\n            walletLinkUIConstructor,\n            storage: this._storage,\n            relayEventManager: this._relayEventManager,\n            walletLinkAnalytics: this._walletLinkAnalytics\n        });\n        this.setAppInfo(options.appName, options.appLogoUrl);\n        this._relay.attachUI();\n    }\n    /**\n     * Create a Web3 Provider object\n     * @param jsonRpcUrl Ethereum JSON RPC URL (Default: \"\")\n     * @param chainId Ethereum Chain ID (Default: 1)\n     * @returns A Web3 Provider\n     */\n    makeWeb3Provider(jsonRpcUrl = \"\", chainId = 1) {\n        if (typeof window.walletLinkExtension !== \"undefined\") {\n            if (\n            /* eslint-disable @typescript-eslint/ban-ts-comment */\n            // @ts-ignore\n            typeof window.walletLinkExtension.isCipher !== \"boolean\" ||\n                // @ts-ignore\n                !window.walletLinkExtension.isCipher\n            /* eslint-enable @typescript-eslint/ban-ts-comment */\n            ) {\n                window.walletLinkExtension.setProviderInfo(jsonRpcUrl, chainId);\n            }\n            return window.walletLinkExtension;\n        }\n        const relay = this._relay;\n        if (!relay || !this._relayEventManager || !this._storage) {\n            throw new Error(\"Relay not initialized, should never happen\");\n        }\n        if (!jsonRpcUrl)\n            relay.setConnectDisabled(true);\n        return new WalletLinkProvider_1.WalletLinkProvider({\n            relayProvider: () => Promise.resolve(relay),\n            relayEventManager: this._relayEventManager,\n            storage: this._storage,\n            jsonRpcUrl,\n            chainId,\n            walletLinkAnalytics: this._walletLinkAnalytics,\n            overrideIsMetaMask: this._overrideIsMetaMask,\n            overrideIsCoinbaseWallet: this._overrideIsCoinbaseWallet\n        });\n    }\n    /**\n     * Set application information\n     * @param appName Application name\n     * @param appLogoUrl Application logo image URL\n     */\n    setAppInfo(appName, appLogoUrl) {\n        var _a;\n        this._appName = appName || \"DApp\";\n        this._appLogoUrl = appLogoUrl || (0, util_1.getFavicon)();\n        if (typeof window.walletLinkExtension !== \"undefined\") {\n            if (\n            /* eslint-disable @typescript-eslint/ban-ts-comment */\n            // @ts-ignore\n            typeof window.walletLinkExtension.isCipher !== \"boolean\" ||\n                // @ts-ignore\n                !window.walletLinkExtension.isCipher\n            /* eslint-enable @typescript-eslint/ban-ts-comment */\n            ) {\n                window.walletLinkExtension.setAppInfo(this._appName, this._appLogoUrl);\n            }\n        }\n        else {\n            (_a = this._relay) === null || _a === void 0 ? void 0 : _a.setAppInfo(this._appName, this._appLogoUrl);\n        }\n    }\n    /**\n     * Disconnect. After disconnecting, this will reload the web page to ensure\n     * all potential stale state is cleared.\n     */\n    disconnect() {\n        var _a;\n        if (typeof window.walletLinkExtension !== \"undefined\") {\n            window.walletLinkExtension.close();\n        }\n        else {\n            (_a = this._relay) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n        }\n    }\n}\nexports.WalletLink = WalletLink;\n/**\n * WalletLink version\n */\nWalletLink.VERSION = WALLETLINK_VERSION;\n"]},"metadata":{},"sourceType":"script"}