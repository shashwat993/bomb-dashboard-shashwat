{"ast":null,"code":"const resolve = require('./resolve');\n\nconst provider = require('./provider');\n\nconst presets = require('./presets');\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n};\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null;\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null;\nif (injected.ethereum) injected.ethereum.__isProvider = true;\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n};\n\nmodule.exports = function () {\n  let targets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['injected', 'frame'];\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return provider(connections, resolve(targets, presets), options);\n};","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/node_modules/eth-provider/browser.js"],"names":["resolve","require","provider","presets","injected","ethereum","window","web3","currentProvider","ws","WebSocket","XHR","XMLHttpRequest","__isProvider","connections","ipc","http","module","exports","targets","options"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AAEA,MAAMG,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAAE,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACD,QAAd,KAA2B,WAA5D,GAA0EC,MAAM,CAACD,QAAjF,GAA4F,IADvF;AAEfE,EAAAA,IAAI,EAAE,OAAOD,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACC,IAAd,KAAuB,WAAxD,GAAsED,MAAM,CAACC,IAAP,CAAYC,eAAlF,GAAoG;AAF3F,CAAjB;AAIA,MAAMC,EAAE,GAAG,OAAOH,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACI,SAAd,KAA4B,WAA7D,GAA2EJ,MAAM,CAACI,SAAlF,GAA8F,IAAzG;AACA,MAAMC,GAAG,GAAG,OAAOL,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACM,cAAd,KAAiC,WAAlE,GAAgFN,MAAM,CAACM,cAAvF,GAAwG,IAApH;AAEA,IAAIR,QAAQ,CAACC,QAAb,EAAuBD,QAAQ,CAACC,QAAT,CAAkBQ,YAAlB,GAAiC,IAAjC;AAEvB,MAAMC,WAAW,GAAG;AAClBV,EAAAA,QAAQ,EAAEA,QAAQ,CAACC,QAAT,IAAqBJ,OAAO,CAAC,wBAAD,CAAP,CAAkCG,QAAQ,CAACG,IAA3C,CADb;AAElBQ,EAAAA,GAAG,EAAEd,OAAO,CAAC,2BAAD,CAAP,CAAqC,+CAArC,CAFa;AAGlBQ,EAAAA,EAAE,EAAER,OAAO,CAAC,kBAAD,CAAP,CAA4BQ,EAA5B,CAHc;AAIlBO,EAAAA,IAAI,EAAEf,OAAO,CAAC,oBAAD,CAAP,CAA8BU,GAA9B;AAJY,CAApB;;AAOAM,MAAM,CAACC,OAAP,GAAiB;AAAA,MAACC,OAAD,uEAAW,CAAC,UAAD,EAAa,OAAb,CAAX;AAAA,MAAkCC,OAAlC,uEAA4C,EAA5C;AAAA,SAAmDlB,QAAQ,CAACY,WAAD,EAAcd,OAAO,CAACmB,OAAD,EAAUhB,OAAV,CAArB,EAAyCiB,OAAzC,CAA3D;AAAA,CAAjB","sourcesContent":["const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets = ['injected', 'frame'], options = {}) => provider(connections, resolve(targets, presets), options)\n"]},"metadata":{},"sourceType":"script"}