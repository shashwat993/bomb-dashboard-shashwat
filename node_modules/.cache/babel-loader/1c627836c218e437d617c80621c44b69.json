{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalValueLocked = () => {\n  const [totalValueLocked, setTotalValueLocked] = useState(0);\n  const {\n    slowRefresh\n  } = useRefresh();\n  const bombFinance = useBombFinance();\n  useEffect(() => {\n    async function fetchTVL() {\n      try {\n        setTotalValueLocked(await bombFinance.getTotalValueLocked());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetchTVL();\n  }, [setTotalValueLocked, bombFinance, slowRefresh]);\n  return totalValueLocked;\n};\n\nexport default useTotalValueLocked;","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/src/hooks/useTotalValueLocked.ts"],"names":["useEffect","useState","useBombFinance","useRefresh","useTotalValueLocked","totalValueLocked","setTotalValueLocked","slowRefresh","bombFinance","fetchTVL","getTotalValueLocked","err","console","error"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAS,CAAT,CAAxD;AACA,QAAM;AAACM,IAAAA;AAAD,MAAgBJ,UAAU,EAAhC;AACA,QAAMK,WAAW,GAAGN,cAAc,EAAlC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,QAAf,GAA0B;AACxB,UAAI;AACFH,QAAAA,mBAAmB,CAAC,MAAME,WAAW,CAACE,mBAAZ,EAAP,CAAnB;AACD,OAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF;;AACDF,IAAAA,QAAQ;AACT,GATQ,EASN,CAACH,mBAAD,EAAsBE,WAAtB,EAAmCD,WAAnC,CATM,CAAT;AAWA,SAAOF,gBAAP;AACD,CAjBD;;AAmBA,eAAeD,mBAAf","sourcesContent":["import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalValueLocked = () => {\n  const [totalValueLocked, setTotalValueLocked] = useState<Number>(0);\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchTVL() {\n      try {\n        setTotalValueLocked(await bombFinance.getTotalValueLocked());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchTVL();\n  }, [setTotalValueLocked, bombFinance, slowRefresh]);\n\n  return totalValueLocked;\n};\n\nexport default useTotalValueLocked;\n"]},"metadata":{},"sourceType":"module"}