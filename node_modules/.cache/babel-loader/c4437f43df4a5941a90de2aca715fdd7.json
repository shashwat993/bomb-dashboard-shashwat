{"ast":null,"code":"var _jsxFileName = \"/home/shashwat/Projects/Dyeus/src/views/Dashboard/components/progressCountdown.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Countdown from 'react-countdown';\n\nconst ProgressCountdown = _ref => {\n  let {\n    base,\n    deadline,\n    hideBar,\n    description\n  } = _ref;\n  const percentage = Date.now() >= deadline.getTime() ? 100 : (Date.now() - base.getTime()) / (deadline.getTime() - base.getTime()) * 100;\n\n  const countdownRenderer = countdownProps => {\n    const {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = countdownProps;\n    const h = String(days * 24 + hours);\n    const m = String(minutes);\n    const s = String(seconds);\n    return /*#__PURE__*/React.createElement(StyledCountdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, h.padStart(2, '0'), \":\", m.padStart(2, '0'), \":\", s.padStart(2, '0'));\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Card>\n    React.createElement(StyledCardContentInner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Countdown, {\n      key: new Date().getTime(),\n      date: deadline,\n      renderer: countdownRenderer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }), hideBar ? '' : /*#__PURE__*/React.createElement(StyledProgressOuter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StyledProgress, {\n      progress: percentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }))) // </Card>\n\n  );\n};\n\nconst StyledCountdown = styled.p`\n  // font-size: 14px;\n  font-weight: 700;\n  // color: ${props => props.theme.color.grey[100]};\n  margin: 0 0 6px 0;\n`;\nconst StyledProgressOuter = styled.div`\n  width: 100%;\n  height: 8px;\n  border-radius: 3px;\n  background: ${props => props.theme.color.grey[700]};\n`;\nconst StyledProgress = styled.div`\n  width: ${props => props.progress}%;\n  height: 100%;\n  border-radius: 3px;\n  background: ${props => props.theme.color.grey[100]};\n`;\nconst StyledCardContentInner = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  // padding: ${props => props.theme.spacing[2]}px ${props => props.theme.spacing[4]}px;\n`;\nexport default ProgressCountdown;","map":{"version":3,"sources":["/home/shashwat/Projects/Dyeus/src/views/Dashboard/components/progressCountdown.tsx"],"names":["React","styled","Countdown","ProgressCountdown","base","deadline","hideBar","description","percentage","Date","now","getTime","countdownRenderer","countdownProps","days","hours","minutes","seconds","h","String","m","s","padStart","StyledCountdown","p","props","theme","color","grey","StyledProgressOuter","div","StyledProgress","progress","StyledCardContentInner","spacing"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Countdown, {CountdownRenderProps} from 'react-countdown';\n\ninterface ProgressCountdownProps {\n  base: Date;\n  deadline: Date;\n  hideBar?: boolean;\n  description: string;\n}\n\nconst ProgressCountdown: React.FC<ProgressCountdownProps> = ({base, deadline, hideBar, description}) => {\n  const percentage =\n    Date.now() >= deadline.getTime()\n      ? 100\n      : ((Date.now() - base.getTime()) / (deadline.getTime() - base.getTime())) * 100;\n\n  const countdownRenderer = (countdownProps: CountdownRenderProps) => {\n    const {days, hours, minutes, seconds} = countdownProps;\n    const h = String(days * 24 + hours);\n    const m = String(minutes);\n    const s = String(seconds);\n    return (\n      <StyledCountdown>\n        {h.padStart(2, '0')}:{m.padStart(2, '0')}:{s.padStart(2, '0')}\n      </StyledCountdown>\n    );\n  };\n  return (\n    // <Card>\n    <StyledCardContentInner>\n      {/* <StyledDesc>{description}</StyledDesc> */}\n      <Countdown key={new Date().getTime()} date={deadline} renderer={countdownRenderer} />\n      {hideBar ? (\n        ''\n      ) : (\n        <StyledProgressOuter>\n          <StyledProgress progress={percentage} />\n        </StyledProgressOuter>\n      )}\n    </StyledCardContentInner>\n    // </Card>\n  );\n};\n\nconst StyledCountdown = styled.p`\n  // font-size: 14px;\n  font-weight: 700;\n  // color: ${(props) => props.theme.color.grey[100]};\n  margin: 0 0 6px 0;\n`;\n\nconst StyledProgressOuter = styled.div`\n  width: 100%;\n  height: 8px;\n  border-radius: 3px;\n  background: ${(props) => props.theme.color.grey[700]};\n`;\n\nconst StyledProgress = styled.div<{progress: number}>`\n  width: ${(props) => props.progress}%;\n  height: 100%;\n  border-radius: 3px;\n  background: ${(props) => props.theme.color.grey[100]};\n`;\n\nconst StyledCardContentInner = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  // padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ProgressCountdown;\n"]},"metadata":{},"sourceType":"module"}