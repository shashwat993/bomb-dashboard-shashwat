{"ast":null,"code":"import Web3 from 'web3';\nimport { defaultEthereumConfig } from './config';\nimport { formatUnits, parseUnits } from 'ethers/lib/utils';\nexport function web3ProviderFrom(endpoint, config) {\n  const ethConfig = Object.assign(defaultEthereumConfig, config || {});\n  const providerClass = endpoint.includes('wss') ? Web3.providers.WebsocketProvider : Web3.providers.HttpProvider;\n  return new providerClass(endpoint, {\n    timeout: ethConfig.ethereumNodeTimeout\n  });\n}\nexport function balanceToDecimal(s) {\n  return formatUnits(s);\n}\nexport function decimalToBalance(d) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n  return parseUnits(String(d), decimals);\n}","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/src/bomb-finance/ether-utils.ts"],"names":["Web3","defaultEthereumConfig","formatUnits","parseUnits","web3ProviderFrom","endpoint","config","ethConfig","Object","assign","providerClass","includes","providers","WebsocketProvider","HttpProvider","timeout","ethereumNodeTimeout","balanceToDecimal","s","decimalToBalance","d","decimals","String"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAAQC,qBAAR,QAAoD,UAApD;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAsC,kBAAtC;AAGA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAA4CC,MAA5C,EAA0E;AAC/E,QAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcR,qBAAd,EAAqCK,MAAM,IAAI,EAA/C,CAAlB;AAEA,QAAMI,aAAa,GAAGL,QAAQ,CAACM,QAAT,CAAkB,KAAlB,IAA2BX,IAAI,CAACY,SAAL,CAAeC,iBAA1C,GAA8Db,IAAI,CAACY,SAAL,CAAeE,YAAnG;AAEA,SAAO,IAAIJ,aAAJ,CAAkBL,QAAlB,EAA4B;AACjCU,IAAAA,OAAO,EAAER,SAAS,CAACS;AADc,GAA5B,CAAP;AAGD;AAED,OAAO,SAASC,gBAAT,CAA0BC,CAA1B,EAA6C;AAClD,SAAOhB,WAAW,CAACgB,CAAD,CAAlB;AACD;AAED,OAAO,SAASC,gBAAT,CAA0BC,CAA1B,EAAwE;AAAA,MAA1BC,QAA0B,uEAAf,EAAe;AAC7E,SAAOlB,UAAU,CAACmB,MAAM,CAACF,CAAD,CAAP,EAAYC,QAAZ,CAAjB;AACD","sourcesContent":["import Web3 from 'web3';\nimport {defaultEthereumConfig, EthereumConfig} from './config';\nimport {formatUnits, parseUnits} from 'ethers/lib/utils';\nimport {BigNumber} from 'ethers';\n\nexport function web3ProviderFrom(endpoint: string, config?: EthereumConfig): any {\n  const ethConfig = Object.assign(defaultEthereumConfig, config || {});\n\n  const providerClass = endpoint.includes('wss') ? Web3.providers.WebsocketProvider : Web3.providers.HttpProvider;\n\n  return new providerClass(endpoint, {\n    timeout: ethConfig.ethereumNodeTimeout,\n  });\n}\n\nexport function balanceToDecimal(s: string): string {\n  return formatUnits(s);\n}\n\nexport function decimalToBalance(d: string | number, decimals = 18): BigNumber {\n  return parseUnits(String(d), decimals);\n}\n"]},"metadata":{},"sourceType":"module"}