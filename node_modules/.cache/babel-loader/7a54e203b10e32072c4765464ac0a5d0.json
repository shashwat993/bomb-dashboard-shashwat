{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\n\nconst useChainId = () => {\n  const [chainId, setChainId] = useState(97);\n  const fetchChainId = useCallback(async () => {\n    if (window.ethereum) {\n      const ethereum = window.ethereum;\n      let chainId = await ethereum.request({\n        method: 'eth_chainId'\n      });\n      chainId = parseInt(chainId, 16);\n      setChainId(chainId);\n      window.ethereum.on('networkChanged', function (chainId) {\n        chainId = parseInt(chainId, 16);\n        setChainId(chainId);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    fetchChainId().catch(err => console.error(err.stack));\n    const refreshChainId = setInterval(fetchChainId, 1000);\n    return () => clearInterval(refreshChainId);\n  }, [fetchChainId]);\n  return chainId;\n};\n\nexport default useChainId;","map":{"version":3,"sources":["/home/shashwat/Projects/Dyeus/src/hooks/useChainId.js"],"names":["useCallback","useEffect","useState","useChainId","chainId","setChainId","fetchChainId","window","ethereum","request","method","parseInt","on","catch","err","console","error","stack","refreshChainId","setInterval","clearInterval"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMI,YAAY,GAAGN,WAAW,CAAC,YAAY;AACzC,QAAIO,MAAM,CAACC,QAAX,EAAqB;AACjB,YAAMA,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AACA,UAAIJ,OAAO,GAAG,MAAMI,QAAQ,CAACC,OAAT,CAAiB;AACjCC,QAAAA,MAAM,EAAE;AADyB,OAAjB,CAApB;AAGAN,MAAAA,OAAO,GAAGO,QAAQ,CAACP,OAAD,EAAU,EAAV,CAAlB;AACAC,MAAAA,UAAU,CAACD,OAAD,CAAV;AAEAG,MAAAA,MAAM,CAACC,QAAP,CAAgBI,EAAhB,CAAmB,gBAAnB,EAAqC,UAAUR,OAAV,EAAmB;AACpDA,QAAAA,OAAO,GAAGO,QAAQ,CAACP,OAAD,EAAU,EAAV,CAAlB;AACAC,QAAAA,UAAU,CAACD,OAAD,CAAV;AACH,OAHD;AAIH;AACJ,GAd+B,EAc7B,EAd6B,CAAhC;AAgBAH,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,YAAY,GAAGO,KAAf,CAAsBC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,KAAlB,CAA9B;AAEA,UAAMC,cAAc,GAAGC,WAAW,CAACb,YAAD,EAAe,IAAf,CAAlC;AACA,WAAO,MAAMc,aAAa,CAACF,cAAD,CAA1B;AACH,GALQ,EAKN,CAACZ,YAAD,CALM,CAAT;AAOA,SAAOF,OAAP;AACH,CA3BD;;AA6BA,eAAeD,UAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nconst useChainId = () => {\n    const [chainId, setChainId] = useState(97);\n\n    const fetchChainId = useCallback(async () => {\n        if (window.ethereum) {\n            const ethereum = window.ethereum;\n            let chainId = await ethereum.request({\n                method: 'eth_chainId',\n            });\n            chainId = parseInt(chainId, 16);\n            setChainId(chainId);\n\n            window.ethereum.on('networkChanged', function (chainId) {\n                chainId = parseInt(chainId, 16);\n                setChainId(chainId);\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        fetchChainId().catch((err) => console.error(err.stack));\n\n        const refreshChainId = setInterval(fetchChainId, 1000);\n        return () => clearInterval(refreshChainId);\n    }, [fetchChainId]);\n\n    return chainId;\n};\n\nexport default useChainId;"]},"metadata":{},"sourceType":"module"}