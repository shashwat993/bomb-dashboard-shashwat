{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useStakedBalanceOnBoardroom = () => {\n  const {\n    slowRefresh\n  } = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance === null || bombFinance === void 0 ? void 0 : bombFinance.isUnlocked;\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await bombFinance.getStakedSharesOnBoardroom());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    if (isUnlocked) {\n      fetchBalance();\n    }\n  }, [slowRefresh, isUnlocked, bombFinance]);\n  return balance;\n};\n\nexport default useStakedBalanceOnBoardroom;","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/src/hooks/useStakedBalanceOnBoardroom.ts"],"names":["useEffect","useState","BigNumber","useBombFinance","useRefresh","useStakedBalanceOnBoardroom","slowRefresh","balance","setBalance","from","bombFinance","isUnlocked","fetchBalance","getStakedSharesOnBoardroom","e","console","error"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,2BAA2B,GAAG,MAAM;AACxC,QAAM;AAACC,IAAAA;AAAD,MAAgBF,UAAU,EAAhC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACC,SAAS,CAACO,IAAV,CAAe,CAAf,CAAD,CAAtC;AACA,QAAMC,WAAW,GAAGP,cAAc,EAAlC;AACA,QAAMQ,UAAU,GAAGD,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEC,UAAhC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,YAAf,GAA8B;AAC5B,UAAI;AACFJ,QAAAA,UAAU,CAAC,MAAME,WAAW,CAACG,0BAAZ,EAAP,CAAV;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;;AACD,QAAIH,UAAJ,EAAgB;AACdC,MAAAA,YAAY;AACb;AACF,GAXQ,EAWN,CAACN,WAAD,EAAcK,UAAd,EAA0BD,WAA1B,CAXM,CAAT;AAYA,SAAOH,OAAP;AACD,CAlBD;;AAoBA,eAAeF,2BAAf","sourcesContent":["import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useStakedBalanceOnBoardroom = () => {\n  const {slowRefresh} = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await bombFinance.getStakedSharesOnBoardroom());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    if (isUnlocked) {\n      fetchBalance();\n    }\n  }, [slowRefresh, isUnlocked, bombFinance]);\n  return balance;\n};\n\nexport default useStakedBalanceOnBoardroom;\n"]},"metadata":{},"sourceType":"module"}