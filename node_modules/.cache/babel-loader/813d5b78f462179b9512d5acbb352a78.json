{"ast":null,"code":"var _jsxFileName = \"/home/shashwat/Projects/Dyeus/src/views/Bond/Bond.tsx\";\nimport React, { useCallback, useMemo } from 'react';\nimport Page from '../../components/Page';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport PageHeader from '../../components/PageHeader';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/useBondStats'; // import useBombStats from '../../hooks/useBombStats';\n\nimport useBombFinance from '../../hooks/useBombFinance';\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport ExchangeStat from './components/ExchangeStat';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../bomb-finance/constants';\nimport { Alert } from '@material-ui/lab';\nimport HomeImage from '../../assets/img/background.jpg';\nimport { Grid, Box } from '@material-ui/core';\nimport { Helmet } from 'react-helmet';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${HomeImage}) repeat !important;\n    background-size: cover !important;\n    background-color: #171923;\n  }\n`;\nconst TITLE = 'bomb.money | Bonds';\n\nconst Bond = () => {\n  const {\n    path\n  } = useRouteMatch();\n  const bombFinance = useBombFinance();\n  const addTransaction = useTransactionAdder();\n  const bondStat = useBondStats(); //const bombStat = useBombStats();\n\n  const cashPrice = useCashPriceInLastTWAP();\n  const bondsPurchasable = useBondsPurchasable();\n  const bondBalance = useTokenBalance(bombFinance === null || bombFinance === void 0 ? void 0 : bombFinance.BBOND); //const scalingFactor = useMemo(() => (cashPrice ? Number(cashPrice) : null), [cashPrice]);\n\n  const handleBuyBonds = useCallback(async amount => {\n    const tx = await bombFinance.buyBonds(amount);\n    addTransaction(tx, {\n      summary: `Buy ${Number(amount).toFixed(2)} BBOND with ${amount} BOMB`\n    });\n  }, [bombFinance, addTransaction]);\n  const handleRedeemBonds = useCallback(async amount => {\n    const tx = await bombFinance.redeemBonds(amount);\n    addTransaction(tx, {\n      summary: `Redeem ${amount} BBOND`\n    });\n  }, [bombFinance, addTransaction]);\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\n  const isBondPurchasable = useMemo(() => Number(bondStat === null || bondStat === void 0 ? void 0 : bondStat.tokenInFtm) < 1.01, [bondStat]);\n  const isBondPayingPremium = useMemo(() => Number(bondStat === null || bondStat === void 0 ? void 0 : bondStat.tokenInFtm) >= 1.1, [bondStat]); // console.log(\"bondstat\", Number(bondStat?.tokenInFtm))\n\n  const bondScale = (Number(cashPrice) / 100000000000000).toFixed(4);\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BackgroundImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, TITLE)), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    icon: 'ðŸ’£',\n    title: \"Buy & Redeem Bonds\",\n    subtitle: \"Earn premiums upon redemption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })), isBondPayingPremium === false ? /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    justify: \"center\",\n    style: {\n      margin: '18px',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"filled\",\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Claiming below 1.1 peg will not receive a redemption bonus, claim wisely!\")))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(StyledBond, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeCard, {\n    action: \"Purchase\",\n    fromToken: bombFinance.BOMB,\n    fromTokenName: \"BOMB\",\n    toToken: bombFinance.BBOND,\n    toTokenName: \"BBOND\",\n    priceDesc: !isBondPurchasable ? 'BOMB is over peg' : getDisplayBalance(bondsPurchasable, 18, 4) + ' BBOND available for purchase',\n    onExchange: handleBuyBonds,\n    disabled: !bondStat || isBondRedeemable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(StyledStatsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeStat, {\n    tokenName: \"10,000 BOMB\",\n    description: \"Last-Hour TWAP Price\" //price={Number(bombStat?.tokenInFtm).toFixed(4) || '-'}\n    ,\n    price: bondScale || '-',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ExchangeStat, {\n    tokenName: \"10,000 BBOND\",\n    description: \"Current Price: (BOMB)^2\",\n    price: Number(bondStat === null || bondStat === void 0 ? void 0 : bondStat.tokenInFtm).toFixed(4) || '-',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeCard, {\n    action: \"Redeem\",\n    fromToken: bombFinance.BBOND,\n    fromTokenName: \"BBOND\",\n    toToken: bombFinance.BOMB,\n    toTokenName: \"BOMB\",\n    priceDesc: `${getDisplayBalance(bondBalance)} BBOND Available in wallet`,\n    onExchange: handleRedeemBonds,\n    disabled: !bondStat || bondBalance.eq(0) || !isBondRedeemable,\n    disabledDescription: !isBondRedeemable ? `Enabled when 10,000 BOMB > ${BOND_REDEEM_PRICE}BTC` : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  })))));\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nconst StyledStatsWrapper = styled.div`\n  display: flex;\n  flex: 0.8;\n  margin: 0 20px;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 16px 0;\n  }\n`;\nexport default Bond;","map":{"version":3,"sources":["/home/shashwat/Projects/Dyeus/src/views/Bond/Bond.tsx"],"names":["React","useCallback","useMemo","Page","createGlobalStyle","Route","Switch","useRouteMatch","PageHeader","ExchangeCard","styled","Spacer","useBondStats","useBombFinance","useCashPriceInLastTWAP","useTransactionAdder","ExchangeStat","useTokenBalance","useBondsPurchasable","getDisplayBalance","BOND_REDEEM_PRICE","BOND_REDEEM_PRICE_BN","Alert","HomeImage","Grid","Box","Helmet","BackgroundImage","TITLE","Bond","path","bombFinance","addTransaction","bondStat","cashPrice","bondsPurchasable","bondBalance","BBOND","handleBuyBonds","amount","tx","buyBonds","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","isBondPurchasable","tokenInFtm","isBondPayingPremium","bondScale","margin","display","BOMB","eq","StyledBond","div","StyledCardWrapper","StyledStatsWrapper"],"mappings":"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","sourcesContent":["import React, {useCallback, useMemo} from 'react';\n\n\nimport Page from '../../components/Page';\nimport {createGlobalStyle} from 'styled-components';\nimport {Route, Switch, useRouteMatch} from 'react-router-dom';\nimport PageHeader from '../../components/PageHeader';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/useBondStats';\n// import useBombStats from '../../hooks/useBombStats';\nimport useBombFinance from '../../hooks/useBombFinance';\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\nimport {useTransactionAdder} from '../../state/transactions/hooks';\nimport ExchangeStat from './components/ExchangeStat';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\nimport {getDisplayBalance} from '../../utils/formatBalance';\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../bomb-finance/constants';\nimport { Alert } from '@material-ui/lab';\n\n\nimport HomeImage from '../../assets/img/background.jpg';\nimport { Grid, Box } from '@material-ui/core';\nimport { Helmet } from 'react-helmet';\n\n\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${HomeImage}) repeat !important;\n    background-size: cover !important;\n    background-color: #171923;\n  }\n`;\nconst TITLE = 'bomb.money | Bonds'\n\nconst Bond: React.FC = () => {\n  const {path} = useRouteMatch();\n  const bombFinance = useBombFinance();\n  const addTransaction = useTransactionAdder();\n  const bondStat = useBondStats();\n  //const bombStat = useBombStats();\n  const cashPrice = useCashPriceInLastTWAP();\n\n  const bondsPurchasable = useBondsPurchasable();\n\n  const bondBalance = useTokenBalance(bombFinance?.BBOND);\n  //const scalingFactor = useMemo(() => (cashPrice ? Number(cashPrice) : null), [cashPrice]);\n\n  const handleBuyBonds = useCallback(\n    async (amount: string) => {\n      const tx = await bombFinance.buyBonds(amount);\n      addTransaction(tx, {\n        summary: `Buy ${Number(amount).toFixed(2)} BBOND with ${amount} BOMB`,\n      });\n    },\n    [bombFinance, addTransaction],\n  );\n\n  const handleRedeemBonds = useCallback(\n    async (amount: string) => {\n      const tx = await bombFinance.redeemBonds(amount);\n      addTransaction(tx, {summary: `Redeem ${amount} BBOND`});\n    },\n    [bombFinance, addTransaction],\n  );\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat]);\n  const isBondPayingPremium = useMemo(() => Number(bondStat?.tokenInFtm) >= 1.1, [bondStat]);\n// console.log(\"bondstat\", Number(bondStat?.tokenInFtm))\n  const bondScale = (Number(cashPrice) / 100000000000000).toFixed(4); \n\n\n\n  return (\n    <Switch>\n      <Page>\n        <BackgroundImage />\n              <Helmet>\n        <title>{TITLE}</title>\n     \n      </Helmet>\n            <Route exact path={path}>\n              <PageHeader icon={'ðŸ’£'} title=\"Buy &amp; Redeem Bonds\" subtitle=\"Earn premiums upon redemption\" />\n            </Route>\n            {isBondPayingPremium === false ? (\n\n\n              <Box mt={5}>\n                <Grid item xs={12} sm={12} justify=\"center\" style={{ margin: '18px', display: 'flex' }}>\n                <Alert variant=\"filled\" severity=\"error\">\n                    <b>\n                      Claiming below 1.1 peg will not receive a redemption bonus, claim wisely!</b>\n                      \n              </Alert>\n            \n              </Grid>\n              </Box>\n            ) : <></>}\n          \n            <StyledBond>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Purchase\"\n                  fromToken={bombFinance.BOMB}\n                  fromTokenName=\"BOMB\"\n                  toToken={bombFinance.BBOND}\n                  toTokenName=\"BBOND\"\n                  priceDesc={\n                    !isBondPurchasable\n                      ? 'BOMB is over peg'\n                      : getDisplayBalance(bondsPurchasable, 18, 4) + ' BBOND available for purchase'\n                  }\n                  onExchange={handleBuyBonds}\n                  disabled={!bondStat || isBondRedeemable}\n                />\n              </StyledCardWrapper>\n              <StyledStatsWrapper>\n                <ExchangeStat\n                  tokenName=\"10,000 BOMB\"\n                  description=\"Last-Hour TWAP Price\"\n                  //price={Number(bombStat?.tokenInFtm).toFixed(4) || '-'}\n                 price={bondScale || '-'}\n\n                />\n                <Spacer size=\"md\" />\n                <ExchangeStat\n                  tokenName=\"10,000 BBOND\"\n                  description=\"Current Price: (BOMB)^2\"\n                  price={Number(bondStat?.tokenInFtm).toFixed(4) || '-'}\n                />\n              </StyledStatsWrapper>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Redeem\"\n                  fromToken={bombFinance.BBOND}\n                  fromTokenName=\"BBOND\"\n                  toToken={bombFinance.BOMB}\n                  toTokenName=\"BOMB\"\n                  priceDesc={`${getDisplayBalance(bondBalance)} BBOND Available in wallet`}\n                  onExchange={handleRedeemBonds}\n                  disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\n                  disabledDescription={!isBondRedeemable ? `Enabled when 10,000 BOMB > ${BOND_REDEEM_PRICE}BTC` : null}\n                />\n              </StyledCardWrapper>\n            </StyledBond>\n      </Page>\n    </Switch>\n  );\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst StyledStatsWrapper = styled.div`\n  display: flex;\n  flex: 0.8;\n  margin: 0 20px;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 16px 0;\n  }\n`;\n\nexport default Bond;\n"]},"metadata":{},"sourceType":"module"}