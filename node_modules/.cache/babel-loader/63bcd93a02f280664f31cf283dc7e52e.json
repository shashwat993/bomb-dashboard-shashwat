{"ast":null,"code":"var _jsxFileName = \"/home/shashwat/Projects/Intern/src/components/Popups/PopupItem.tsx\";\nimport React, { useCallback, useContext, useEffect } from 'react';\nimport { X } from 'react-feather';\nimport { useSpring } from 'react-spring/web';\nimport styled, { ThemeContext } from 'styled-components';\nimport { animated } from 'react-spring';\nimport { useRemovePopup } from '../../state/application/hooks';\nimport TransactionPopup from './TransactionPopup';\nimport ErrorPopup from './ErrorPopup';\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.color.grey[700];\n}};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    min-width: 290px;\n  }\n`;\nconst Fader = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 2px;\n  background-color: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.color.grey[400];\n}};\n`;\nconst AnimatedFader = animated(Fader);\nexport default function PopupItem(_ref3) {\n  let {\n    removeAfterMs,\n    content,\n    popKey\n  } = _ref3;\n  const removePopup = useRemovePopup();\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\n  useEffect(() => {\n    if (removeAfterMs === null) return undefined;\n    const timeout = setTimeout(() => {\n      removeThisPopup();\n    }, removeAfterMs);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [removeAfterMs, removeThisPopup]);\n  const theme = useContext(ThemeContext);\n  let popupContent;\n\n  if ('txn' in content) {\n    const {\n      txn: {\n        hash,\n        success,\n        summary\n      }\n    } = content;\n    popupContent = /*#__PURE__*/React.createElement(TransactionPopup, {\n      hash: hash,\n      success: success,\n      summary: summary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }\n    });\n  }\n\n  if ('error' in content) {\n    const {\n      error: {\n        message,\n        stack\n      }\n    } = content;\n    popupContent = /*#__PURE__*/React.createElement(ErrorPopup, {\n      message: message,\n      stack: stack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 20\n      }\n    });\n  }\n\n  const faderStyle = useSpring({\n    from: {\n      width: '100%'\n    },\n    to: {\n      width: '0%'\n    },\n    config: {\n      duration: removeAfterMs !== null && removeAfterMs !== void 0 ? removeAfterMs : undefined\n    }\n  });\n  return /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledClose, {\n    color: theme.text2,\n    onClick: removeThisPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), popupContent, removeAfterMs !== null ? /*#__PURE__*/React.createElement(AnimatedFader, {\n    style: faderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }) : null);\n}","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/src/components/Popups/PopupItem.tsx"],"names":["React","useCallback","useContext","useEffect","X","useSpring","styled","ThemeContext","animated","useRemovePopup","TransactionPopup","ErrorPopup","StyledClose","Popup","div","theme","color","grey","Fader","AnimatedFader","PopupItem","removeAfterMs","content","popKey","removePopup","removeThisPopup","undefined","timeout","setTimeout","clearTimeout","popupContent","txn","hash","success","summary","error","message","stack","faderStyle","from","width","to","config","duration","text2"],"mappings":"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","sourcesContent":["import React, {useCallback, useContext, useEffect} from 'react';\nimport {X} from 'react-feather';\nimport {useSpring} from 'react-spring/web';\nimport styled, {ThemeContext} from 'styled-components';\nimport {animated} from 'react-spring';\nimport {PopupContent} from '../../state/application/actions';\nimport {useRemovePopup} from '../../state/application/hooks';\nimport TransactionPopup from './TransactionPopup';\nimport ErrorPopup from './ErrorPopup';\n\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${({theme}) => theme.color.grey[700]};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    min-width: 290px;\n  }\n`;\nconst Fader = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 2px;\n  background-color: ${({theme}) => theme.color.grey[400]};\n`;\n\nconst AnimatedFader = animated(Fader);\n\nexport default function PopupItem({\n  removeAfterMs,\n  content,\n  popKey,\n}: {\n  removeAfterMs: number | null;\n  content: PopupContent;\n  popKey: string;\n}) {\n  const removePopup = useRemovePopup();\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\n  useEffect(() => {\n    if (removeAfterMs === null) return undefined;\n\n    const timeout = setTimeout(() => {\n      removeThisPopup();\n    }, removeAfterMs);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [removeAfterMs, removeThisPopup]);\n\n  const theme = useContext(ThemeContext);\n\n  let popupContent;\n  if ('txn' in content) {\n    const {\n      txn: {hash, success, summary},\n    } = content;\n    popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />;\n  }\n  if ('error' in content) {\n    const {\n      error: {message, stack},\n    } = content;\n    popupContent = <ErrorPopup message={message} stack={stack} />;\n  }\n\n  const faderStyle = useSpring({\n    from: {width: '100%'},\n    to: {width: '0%'},\n    config: {duration: removeAfterMs ?? undefined},\n  });\n\n  return (\n    <Popup>\n      <StyledClose color={theme.text2} onClick={removeThisPopup} />\n      {popupContent}\n      {removeAfterMs !== null ? <AnimatedFader style={faderStyle} /> : null}\n    </Popup>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}