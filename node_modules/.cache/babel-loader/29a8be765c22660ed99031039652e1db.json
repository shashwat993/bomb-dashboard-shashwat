{"ast":null,"code":"const EventEmitter = require('events').EventEmitter;\n\nconst inherits = require('util').inherits;\n\nconst ethUtil = require('ethereumjs-util');\n\nconst EthBlockTracker = require('eth-block-tracker');\n\nconst map = require('async/map');\n\nconst eachSeries = require('async/eachSeries');\n\nconst Stoplight = require('./util/stoplight.js');\n\nconst cacheUtils = require('./util/rpc-cache-utils.js');\n\nconst createPayload = require('./util/create-payload.js');\n\nconst noop = function () {};\n\nmodule.exports = Web3ProviderEngine;\ninherits(Web3ProviderEngine, EventEmitter);\n\nfunction Web3ProviderEngine(opts) {\n  const self = this;\n  EventEmitter.call(self);\n  self.setMaxListeners(30); // parse options\n\n  opts = opts || {}; // block polling\n\n  const directProvider = {\n    sendAsync: self._handleAsync.bind(self)\n  };\n  const blockTrackerProvider = opts.blockTrackerProvider || directProvider;\n  self._blockTracker = opts.blockTracker || new EthBlockTracker({\n    provider: blockTrackerProvider,\n    pollingInterval: opts.pollingInterval || 4000\n  }); // handle new block\n\n  self._blockTracker.on('block', jsonBlock => {\n    const bufferBlock = toBufferBlock(jsonBlock);\n\n    self._setCurrentBlock(bufferBlock);\n  }); // emit block events from the block tracker\n\n\n  self._blockTracker.on('block', self.emit.bind(self, 'rawBlock'));\n\n  self._blockTracker.on('sync', self.emit.bind(self, 'sync'));\n\n  self._blockTracker.on('latest', self.emit.bind(self, 'latest')); // set initialization blocker\n\n\n  self._ready = new Stoplight(); // unblock initialization after first block\n\n  self._blockTracker.once('block', () => {\n    self._ready.go();\n  }); // local state\n\n\n  self.currentBlock = null;\n  self._providers = [];\n} // public\n\n\nWeb3ProviderEngine.prototype.start = function () {\n  let cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n  const self = this; // start block polling\n\n  self._blockTracker.start().then(cb).catch(cb);\n\n  self._running = true;\n  self.emit('start');\n};\n\nWeb3ProviderEngine.prototype.stop = function () {\n  const self = this; // stop block polling\n\n  self._blockTracker.stop();\n\n  self._running = false;\n  self.emit('stop');\n};\n\nWeb3ProviderEngine.prototype.isRunning = function () {\n  const self = this;\n  return self._running;\n};\n\nWeb3ProviderEngine.prototype.addProvider = function (source, index) {\n  const self = this;\n\n  if (typeof index === 'number') {\n    self._providers.splice(index, 0, source);\n  } else {\n    self._providers.push(source);\n  }\n\n  source.setEngine(this);\n};\n\nWeb3ProviderEngine.prototype.removeProvider = function (source) {\n  const self = this;\n\n  const index = self._providers.indexOf(source);\n\n  if (index < 0) throw new Error('Provider not found.');\n\n  self._providers.splice(index, 1);\n};\n\nWeb3ProviderEngine.prototype.send = function (payload) {\n  throw new Error('Web3ProviderEngine does not support synchronous requests.');\n};\n\nWeb3ProviderEngine.prototype.sendAsync = function (payload, cb) {\n  const self = this;\n\n  self._ready.await(function () {\n    if (Array.isArray(payload)) {\n      // handle batch\n      map(payload, self._handleAsync.bind(self), cb);\n    } else {\n      // handle single\n      self._handleAsync(payload, cb);\n    }\n  });\n}; // private\n\n\nWeb3ProviderEngine.prototype._handleAsync = function (payload, finished) {\n  var self = this;\n  var currentProvider = -1;\n  var result = null;\n  var error = null;\n  var stack = [];\n  next();\n\n  function next(after) {\n    currentProvider += 1;\n    stack.unshift(after); // Bubbled down as far as we could go, and the request wasn't\n    // handled. Return an error.\n\n    if (currentProvider >= self._providers.length) {\n      end(new Error('Request for method \"' + payload.method + '\" not handled by any subprovider. Please check your subprovider configuration to ensure this method is handled.'));\n    } else {\n      try {\n        var provider = self._providers[currentProvider];\n        provider.handleRequest(payload, next, end);\n      } catch (e) {\n        end(e);\n      }\n    }\n  }\n\n  function end(_error, _result) {\n    error = _error;\n    result = _result;\n    eachSeries(stack, function (fn, callback) {\n      if (fn) {\n        fn(error, result, callback);\n      } else {\n        callback();\n      }\n    }, function () {\n      // console.log('COMPLETED:', payload)\n      // console.log('RESULT: ', result)\n      var resultObj = {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result: result\n      };\n\n      if (error != null) {\n        resultObj.error = {\n          message: error.stack || error.message || error,\n          code: -32000\n        }; // respond with both error formats\n\n        finished(error, resultObj);\n      } else {\n        finished(null, resultObj);\n      }\n    });\n  }\n}; //\n// from remote-data\n//\n\n\nWeb3ProviderEngine.prototype._setCurrentBlock = function (block) {\n  const self = this;\n  self.currentBlock = block;\n  self.emit('block', block);\n}; // util\n\n\nfunction toBufferBlock(jsonBlock) {\n  return {\n    number: ethUtil.toBuffer(jsonBlock.number),\n    hash: ethUtil.toBuffer(jsonBlock.hash),\n    parentHash: ethUtil.toBuffer(jsonBlock.parentHash),\n    nonce: ethUtil.toBuffer(jsonBlock.nonce),\n    mixHash: ethUtil.toBuffer(jsonBlock.mixHash),\n    sha3Uncles: ethUtil.toBuffer(jsonBlock.sha3Uncles),\n    logsBloom: ethUtil.toBuffer(jsonBlock.logsBloom),\n    transactionsRoot: ethUtil.toBuffer(jsonBlock.transactionsRoot),\n    stateRoot: ethUtil.toBuffer(jsonBlock.stateRoot),\n    receiptsRoot: ethUtil.toBuffer(jsonBlock.receiptRoot || jsonBlock.receiptsRoot),\n    miner: ethUtil.toBuffer(jsonBlock.miner),\n    difficulty: ethUtil.toBuffer(jsonBlock.difficulty),\n    totalDifficulty: ethUtil.toBuffer(jsonBlock.totalDifficulty),\n    size: ethUtil.toBuffer(jsonBlock.size),\n    extraData: ethUtil.toBuffer(jsonBlock.extraData),\n    gasLimit: ethUtil.toBuffer(jsonBlock.gasLimit),\n    gasUsed: ethUtil.toBuffer(jsonBlock.gasUsed),\n    timestamp: ethUtil.toBuffer(jsonBlock.timestamp),\n    transactions: jsonBlock.transactions\n  };\n}","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/node_modules/web3-provider-engine/index.js"],"names":["EventEmitter","require","inherits","ethUtil","EthBlockTracker","map","eachSeries","Stoplight","cacheUtils","createPayload","noop","module","exports","Web3ProviderEngine","opts","self","call","setMaxListeners","directProvider","sendAsync","_handleAsync","bind","blockTrackerProvider","_blockTracker","blockTracker","provider","pollingInterval","on","jsonBlock","bufferBlock","toBufferBlock","_setCurrentBlock","emit","_ready","once","go","currentBlock","_providers","prototype","start","cb","then","catch","_running","stop","isRunning","addProvider","source","index","splice","push","setEngine","removeProvider","indexOf","Error","send","payload","await","Array","isArray","finished","currentProvider","result","error","stack","next","after","unshift","length","end","method","handleRequest","e","_error","_result","fn","callback","resultObj","id","jsonrpc","message","code","block","number","toBuffer","hash","parentHash","nonce","mixHash","sha3Uncles","logsBloom","transactionsRoot","stateRoot","receiptsRoot","receiptRoot","miner","difficulty","totalDifficulty","size","extraData","gasLimit","gasUsed","timestamp","transactions"],"mappings":"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","sourcesContent":["const EventEmitter = require('events').EventEmitter\nconst inherits = require('util').inherits\nconst ethUtil = require('ethereumjs-util')\nconst EthBlockTracker = require('eth-block-tracker')\nconst map = require('async/map')\nconst eachSeries = require('async/eachSeries')\nconst Stoplight = require('./util/stoplight.js')\nconst cacheUtils = require('./util/rpc-cache-utils.js')\nconst createPayload = require('./util/create-payload.js')\nconst noop = function(){}\n\nmodule.exports = Web3ProviderEngine\n\n\ninherits(Web3ProviderEngine, EventEmitter)\n\nfunction Web3ProviderEngine(opts) {\n  const self = this\n  EventEmitter.call(self)\n  self.setMaxListeners(30)\n  // parse options\n  opts = opts || {}\n\n  // block polling\n  const directProvider = { sendAsync: self._handleAsync.bind(self) }\n  const blockTrackerProvider = opts.blockTrackerProvider || directProvider\n  self._blockTracker = opts.blockTracker || new EthBlockTracker({\n    provider: blockTrackerProvider,\n    pollingInterval: opts.pollingInterval || 4000,\n  })\n\n  // handle new block\n  self._blockTracker.on('block', (jsonBlock) => {\n    const bufferBlock = toBufferBlock(jsonBlock)\n    self._setCurrentBlock(bufferBlock)\n  })\n\n  // emit block events from the block tracker\n  self._blockTracker.on('block', self.emit.bind(self, 'rawBlock'))\n  self._blockTracker.on('sync', self.emit.bind(self, 'sync'))\n  self._blockTracker.on('latest', self.emit.bind(self, 'latest'))\n\n  // set initialization blocker\n  self._ready = new Stoplight()\n  // unblock initialization after first block\n  self._blockTracker.once('block', () => {\n    self._ready.go()\n  })\n  // local state\n  self.currentBlock = null\n  self._providers = []\n}\n\n// public\n\nWeb3ProviderEngine.prototype.start = function(cb = noop){\n  const self = this\n  // start block polling\n  self._blockTracker.start().then(cb).catch(cb)\n  self._running = true\n  self.emit('start')\n}\n\nWeb3ProviderEngine.prototype.stop = function(){\n  const self = this\n  // stop block polling\n  self._blockTracker.stop()\n  self._running = false\n  self.emit('stop')\n}\n\nWeb3ProviderEngine.prototype.isRunning = function(){\n  const self = this\n  return self._running\n}\n\nWeb3ProviderEngine.prototype.addProvider = function(source, index){\n  const self = this\n  if (typeof index === 'number') {\n    self._providers.splice(index, 0, source)\n  } else {\n    self._providers.push(source)\n  }\n  source.setEngine(this)\n}\n\nWeb3ProviderEngine.prototype.removeProvider = function(source){\n  const self = this\n  const index = self._providers.indexOf(source)\n  if (index < 0) throw new Error('Provider not found.')\n  self._providers.splice(index, 1)\n}\n\nWeb3ProviderEngine.prototype.send = function(payload){\n  throw new Error('Web3ProviderEngine does not support synchronous requests.')\n}\n\nWeb3ProviderEngine.prototype.sendAsync = function(payload, cb){\n  const self = this\n  self._ready.await(function(){\n\n    if (Array.isArray(payload)) {\n      // handle batch\n      map(payload, self._handleAsync.bind(self), cb)\n    } else {\n      // handle single\n      self._handleAsync(payload, cb)\n    }\n\n  })\n}\n\n// private\n\nWeb3ProviderEngine.prototype._handleAsync = function(payload, finished) {\n  var self = this\n  var currentProvider = -1\n  var result = null\n  var error = null\n\n  var stack = []\n\n  next()\n\n  function next(after) {\n    currentProvider += 1\n    stack.unshift(after)\n\n    // Bubbled down as far as we could go, and the request wasn't\n    // handled. Return an error.\n    if (currentProvider >= self._providers.length) {\n      end(new Error('Request for method \"' + payload.method + '\" not handled by any subprovider. Please check your subprovider configuration to ensure this method is handled.'))\n    } else {\n      try {\n        var provider = self._providers[currentProvider]\n        provider.handleRequest(payload, next, end)\n      } catch (e) {\n        end(e)\n      }\n    }\n  }\n\n  function end(_error, _result) {\n    error = _error\n    result = _result\n\n    eachSeries(stack, function(fn, callback) {\n\n      if (fn) {\n        fn(error, result, callback)\n      } else {\n        callback()\n      }\n    }, function() {\n      // console.log('COMPLETED:', payload)\n      // console.log('RESULT: ', result)\n\n      var resultObj = {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result: result\n      }\n\n      if (error != null) {\n        resultObj.error = {\n          message: error.stack || error.message || error,\n          code: -32000\n        }\n        // respond with both error formats\n        finished(error, resultObj)\n      } else {\n        finished(null, resultObj)\n      }\n    })\n  }\n}\n\n//\n// from remote-data\n//\n\nWeb3ProviderEngine.prototype._setCurrentBlock = function(block){\n  const self = this\n  self.currentBlock = block\n  self.emit('block', block)\n}\n\n// util\n\nfunction toBufferBlock (jsonBlock) {\n  return {\n    number:           ethUtil.toBuffer(jsonBlock.number),\n    hash:             ethUtil.toBuffer(jsonBlock.hash),\n    parentHash:       ethUtil.toBuffer(jsonBlock.parentHash),\n    nonce:            ethUtil.toBuffer(jsonBlock.nonce),\n    mixHash:          ethUtil.toBuffer(jsonBlock.mixHash),\n    sha3Uncles:       ethUtil.toBuffer(jsonBlock.sha3Uncles),\n    logsBloom:        ethUtil.toBuffer(jsonBlock.logsBloom),\n    transactionsRoot: ethUtil.toBuffer(jsonBlock.transactionsRoot),\n    stateRoot:        ethUtil.toBuffer(jsonBlock.stateRoot),\n    receiptsRoot:     ethUtil.toBuffer(jsonBlock.receiptRoot || jsonBlock.receiptsRoot),\n    miner:            ethUtil.toBuffer(jsonBlock.miner),\n    difficulty:       ethUtil.toBuffer(jsonBlock.difficulty),\n    totalDifficulty:  ethUtil.toBuffer(jsonBlock.totalDifficulty),\n    size:             ethUtil.toBuffer(jsonBlock.size),\n    extraData:        ethUtil.toBuffer(jsonBlock.extraData),\n    gasLimit:         ethUtil.toBuffer(jsonBlock.gasLimit),\n    gasUsed:          ethUtil.toBuffer(jsonBlock.gasUsed),\n    timestamp:        ethUtil.toBuffer(jsonBlock.timestamp),\n    transactions:     jsonBlock.transactions,\n  }\n}\n"]},"metadata":{},"sourceType":"script"}