{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalStakedOnBoardroom = () => {\n  const [totalStaked, setTotalStaked] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const {\n    slowRefresh\n  } = useRefresh();\n  const isUnlocked = bombFinance === null || bombFinance === void 0 ? void 0 : bombFinance.isUnlocked;\n  useEffect(() => {\n    async function fetchTotalStaked() {\n      try {\n        setTotalStaked(await bombFinance.getTotalStakedInBoardroom());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetchTotalStaked();\n  }, [isUnlocked, slowRefresh, bombFinance]);\n  return totalStaked;\n};\n\nexport default useTotalStakedOnBoardroom;","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/src/hooks/useTotalStakedOnBoardroom.ts"],"names":["useEffect","useState","BigNumber","useBombFinance","useRefresh","useTotalStakedOnBoardroom","totalStaked","setTotalStaked","from","bombFinance","slowRefresh","isUnlocked","fetchTotalStaked","getTotalStakedInBoardroom","err","console","error"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,yBAAyB,GAAG,MAAM;AACtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACC,SAAS,CAACM,IAAV,CAAe,CAAf,CAAD,CAA9C;AACA,QAAMC,WAAW,GAAGN,cAAc,EAAlC;AACA,QAAM;AAACO,IAAAA;AAAD,MAAgBN,UAAU,EAAhC;AACA,QAAMO,UAAU,GAAGF,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,UAAhC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,gBAAf,GAAkC;AAChC,UAAI;AACFL,QAAAA,cAAc,CAAC,MAAME,WAAW,CAACI,yBAAZ,EAAP,CAAd;AACD,OAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF;;AACDF,IAAAA,gBAAgB;AACjB,GATQ,EASN,CAACD,UAAD,EAAaD,WAAb,EAA0BD,WAA1B,CATM,CAAT;AAWA,SAAOH,WAAP;AACD,CAlBD;;AAoBA,eAAeD,yBAAf","sourcesContent":["import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalStakedOnBoardroom = () => {\n  const [totalStaked, setTotalStaked] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function fetchTotalStaked() {\n      try {\n        setTotalStaked(await bombFinance.getTotalStakedInBoardroom());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchTotalStaked();\n  }, [isUnlocked, slowRefresh, bombFinance]);\n\n  return totalStaked;\n};\n\nexport default useTotalStakedOnBoardroom;\n"]},"metadata":{},"sourceType":"module"}