{"ast":null,"code":"var _jsxFileName = \"/home/shashwat/Projects/Intern/src/views/Supply/components/SupplyBtcb.tsx\";\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Box, Button, Card, CardContent, Typography } from '@material-ui/core'; // import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\n\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value'; //import useXbombBalance from '../../../hooks/useXbombBalance';\n\nimport useBtcStats from '../../../hooks/useBtcStats';\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport MetamaskFox from \"../../../assets/img/metamask-fox.svg\";\nimport { getDisplayBalance } from '../../../utils/formatBalance';\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport useBombFinance from '../../../hooks/useBombFinance'; //import useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';   //May not be needed anymore.\n\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport useSupplyToBtcb from '../../../hooks/useSupplyToBtcb';\nimport useRedeemFromBtcb from '../../../hooks/useRedeemFromBtcb';\n\nconst SupplyBtcb = () => {\n  const bombFinance = useBombFinance();\n  const btcStats = useBtcStats();\n  const [approveStatus, approve] = useApprove(bombFinance.BTC, bombFinance.contracts.BombRouter.address);\n  const [approveStatusW, approveW] = useApprove(bombFinance.BBOMBBTCB, bombFinance.contracts.BombRouter.address);\n  const tokenBalance = useTokenBalance(bombFinance.BTC); //const stakedBalance = useStakedBomb();\n\n  const stakedBalance = useTokenBalance(bombFinance.BBOMB_BTCB); // const xbombBalance = useXbombBalance();\n  // const xbombRate = Number(xbombBalance) / 1000000000000000000;\n  // const xbombToBombEquivalent = Number(getDisplayBalance(stakedBalance)) * xbombRate;\n\n  const btcPriceInDollars = useMemo(() => btcStats ? Number(btcStats).toFixed(2) : null, [btcStats]);\n  const stakedTokenPriceInDollars = Number(btcPriceInDollars);\n  const tokenPriceInDollars = useMemo(() => {\n    return stakedTokenPriceInDollars ? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance))).toFixed(2).toString() : null;\n  }, [stakedTokenPriceInDollars, stakedBalance]); // const isOldBoardroomMember = boardroomVersion !== 'latest';\n\n  const {\n    onStake\n  } = useSupplyToBtcb();\n  const {\n    onWithdraw\n  } = useRedeemFromBtcb();\n  const [onPresentDeposit, onDismissDeposit] = useModal( /*#__PURE__*/React.createElement(DepositModal, {\n    max: tokenBalance,\n    onConfirm: value => {\n      onStake(value);\n      onDismissDeposit();\n    },\n    tokenName: 'BTCB',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }));\n  const [onPresentWithdraw, onDismissWithdraw] = useModal( /*#__PURE__*/React.createElement(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: value => {\n      onWithdraw(value);\n      onDismissWithdraw();\n    },\n    tokenName: 'BTCB',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 18\n    }\n  }, \"Supply BTCB\"), /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TokenSymbol, {\n    symbol: \"BTCB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: 'shinyButton',\n    onClick: () => {\n      bombFinance.watchAssetInMetamask('BTCB');\n    },\n    style: {\n      position: 'static',\n      top: '10px',\n      right: '10px',\n      border: '1px grey solid',\n      paddingBottom: '5px',\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"+\"), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"metamask fox\",\n    style: {\n      width: '20px',\n      filter: 'grayscale(100%)'\n    },\n    src: MetamaskFox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Value, {\n    value: getDisplayBalance(stakedBalance),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: 'bBOMB (BTCB)',\n    variant: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: `â‰ˆ $${tokenPriceInDollars}`,\n    variant: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, approveStatus !== ApprovalState.APPROVED ? /*#__PURE__*/React.createElement(Button, {\n    disabled: approveStatus !== ApprovalState.NOT_APPROVED,\n    className: approveStatus === ApprovalState.NOT_APPROVED ? 'shinyButton' : 'shinyButtonDisabled',\n    style: {\n      marginTop: '20px'\n    },\n    onClick: approve,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Approve BTCB\") : /*#__PURE__*/React.createElement(React.Fragment, null, approveStatusW !== ApprovalState.APPROVED ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: approveW,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  }, \"A\") : /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onPresentWithdraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(RemoveIcon, {\n    color: 'yellow',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(StyledActionSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onPresentDeposit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    color: 'yellow',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }))))))));\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 28px;\n  width: 100%;\n`;\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport default SupplyBtcb;","map":{"version":3,"sources":["/home/shashwat/Projects/Intern/src/views/Supply/components/SupplyBtcb.tsx"],"names":["React","useMemo","styled","Box","Button","Card","CardContent","Typography","CardIcon","AddIcon","RemoveIcon","IconButton","Label","Value","useBtcStats","useApprove","ApprovalState","useModal","useTokenBalance","getDisplayBalance","DepositModal","WithdrawModal","useBombFinance","TokenSymbol","useSupplyToBtcb","useRedeemFromBtcb","SupplyBtcb","bombFinance","btcStats","approveStatus","approve","BTC","contracts","BombRouter","address","approveStatusW","approveW","BBOMBBTCB","tokenBalance","stakedBalance","BBOMB_BTCB","btcPriceInDollars","Number","toFixed","stakedTokenPriceInDollars","tokenPriceInDollars","toString","onStake","onWithdraw","onPresentDeposit","onDismissDeposit","value","onPresentWithdraw","onDismissWithdraw","watchAssetInMetamask","position","top","right","border","paddingBottom","marginBottom","width","filter","MetamaskFox","APPROVED","NOT_APPROVED","marginTop","StyledCardHeader","div","StyledCardActions","StyledActionSpacer","props","theme","spacing","StyledCardContentInner"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { Box, Button, Card, CardContent, Typography } from '@material-ui/core';\n\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\n//import useXbombBalance from '../../../hooks/useXbombBalance';\nimport useBtcStats from '../../../hooks/useBtcStats';\nimport useApprove, {ApprovalState} from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport MetamaskFox from '../../../assets/img/metamask-fox.svg';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport useBombFinance from '../../../hooks/useBombFinance';\n//import useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';   //May not be needed anymore.\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport useSupplyToBtcb from '../../../hooks/useSupplyToBtcb';\nimport useRedeemFromBtcb from '../../../hooks/useRedeemFromBtcb';\n\n\n\nconst SupplyBtcb: React.FC = () => {\n  const bombFinance = useBombFinance();\n  const btcStats = useBtcStats();\n\n  const [approveStatus, approve] = useApprove(bombFinance.BTC, bombFinance.contracts.BombRouter.address);\n  const [approveStatusW, approveW] = useApprove(bombFinance.BBOMBBTCB, bombFinance.contracts.BombRouter.address);\n\n  const tokenBalance = useTokenBalance(bombFinance.BTC);\n  //const stakedBalance = useStakedBomb();\n  const stakedBalance = useTokenBalance(bombFinance.BBOMB_BTCB);\n\n  // const xbombBalance = useXbombBalance();\n  // const xbombRate = Number(xbombBalance) / 1000000000000000000;\n  // const xbombToBombEquivalent = Number(getDisplayBalance(stakedBalance)) * xbombRate;\n\n  const btcPriceInDollars = useMemo(\n    () => (btcStats ? Number(btcStats).toFixed(2) : null),\n    [btcStats],\n  );\n\n  const stakedTokenPriceInDollars = Number(btcPriceInDollars);\n\n  const tokenPriceInDollars = useMemo(\n    () => {\n      return stakedTokenPriceInDollars\n        ? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance))).toFixed(2).toString()\n        : null;\n    },\n    [stakedTokenPriceInDollars, stakedBalance],\n  );\n  // const isOldBoardroomMember = boardroomVersion !== 'latest';\n\n  const { onStake } = useSupplyToBtcb();\n  const { onWithdraw } = useRedeemFromBtcb();\n\n  const [onPresentDeposit, onDismissDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={(value) => {\n        onStake(value);\n        onDismissDeposit();\n      }}\n      tokenName={'BTCB'}\n    />,\n  );\n\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={(value) => {\n        onWithdraw(value);\n        onDismissWithdraw();\n      }}\n      tokenName={'BTCB'}\n    />,\n  );\n\n  return (\n    <Box>\n      <Card>\n        <CardContent>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n                 <Typography variant=\"h5\" component=\"h2\">\n              Supply BTCB\n            </Typography>\n              <CardIcon>\n                <TokenSymbol symbol=\"BTCB\" />\n              </CardIcon>\n\n              <Button\n                className={'shinyButton'}\n                onClick={() => {\n                  bombFinance.watchAssetInMetamask('BTCB');\n                }}\n                style={{\n                  position: 'static',\n                  top: '10px',\n                  right: '10px',\n                  border: '1px grey solid',\n                  paddingBottom: '5px',\n                  marginBottom: '20px',\n                }}\n              >\n                {' '}\n                <b>+</b>&nbsp;&nbsp;\n                <img alt=\"metamask fox\" style={{ width: '20px', filter: 'grayscale(100%)' }} src={MetamaskFox} />\n              </Button>\n              <Value value={getDisplayBalance(stakedBalance)} />\n              <Label text={'bBOMB (BTCB)'} variant=\"yellow\" />\n              <Label text={`â‰ˆ $${tokenPriceInDollars}`} variant=\"yellow\" />\n            </StyledCardHeader>\n            <StyledCardActions>\n              {approveStatus !== ApprovalState.APPROVED ? (\n                <Button\n                  disabled={approveStatus !== ApprovalState.NOT_APPROVED}\n                  className={approveStatus === ApprovalState.NOT_APPROVED ? 'shinyButton' : 'shinyButtonDisabled'}\n                  style={{ marginTop: '20px' }}\n                  onClick={approve}\n                >\n                  Approve BTCB\n                </Button>\n              ) : (\n                  <>\n                    {approveStatusW !== ApprovalState.APPROVED ? (\n            \n                      <IconButton onClick={approveW}>\n                        A\n                      </IconButton>\n                    ) : (\n                      <IconButton onClick={onPresentWithdraw}>\n                        <RemoveIcon color={'yellow'} />\n                      </IconButton>\n                        \n                          \n                            )}\n                          \n                           \n                  <StyledActionSpacer />\n                  <IconButton onClick={onPresentDeposit}>\n                    <AddIcon color={'yellow'} />\n                  </IconButton>\n                </>\n              )}\n            </StyledCardActions>\n          </StyledCardContentInner>\n        </CardContent>\n      </Card>\n      {/* <Box mt={2} style={{color: '#FFF'}}>\n        {canWithdrawFromBoardroom ? (\n          ''\n        ) : (\n          <Card>\n            <CardContent>\n              <Typography style={{textAlign: 'center'}}>Withdraw possible in</Typography>\n              <ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Withdraw available in\" />\n            </CardContent>\n          </Card>\n        )}\n      </Box> */}\n    </Box>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 28px;\n  width: 100%;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default SupplyBtcb;\n"]},"metadata":{},"sourceType":"module"}