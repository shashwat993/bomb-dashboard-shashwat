{"ast":null,"code":"var _jsxFileName = \"/home/shashwat/Projects/Dyeus/src/components/TokenSymbol/TokenSymbol.tsx\";\nimport React from 'react'; //Graveyard ecosystem logos\n\nimport bombLogo from '../../assets/img/bomb.png';\nimport tShareLogo from '../../assets/img/bshares.png';\nimport bombLogoPNG from '../../assets/img/bomb.png';\nimport xbombLogo from '../../assets/img/xbomb.png';\nimport busmLogo from '../../assets/img/busm-256.png';\nimport tShareLogoPNG from '../../assets/img/bshares.png';\nimport tBondLogo from '../../assets/img/bbond.png';\nimport bombFtmLpLogo from '../../assets/img/bomb-bitcoin-LP.png';\nimport bshareFtmLpLogo from '../../assets/img/bshare-bnb-LP.png';\nimport busmBusdLpLogo from '../../assets/img/busm-busd-lp.png';\nimport bnbLogo from '../../assets/img/bnb.png';\nimport btcLogo from '../../assets/img/BCTB-icon.png';\nconst logosBySymbol = {\n  //Real tokens\n  //=====================\n  BOMB: bombLogo,\n  BOMBPNG: bombLogoPNG,\n  BSHAREPNG: tShareLogoPNG,\n  XBOMB: xbombLogo,\n  BSHARE: tShareLogo,\n  BBOND: tBondLogo,\n  BUSM: busmLogo,\n  WBNB: bnbLogo,\n  BOO: bnbLogo,\n  SHIBA: bnbLogo,\n  ZOO: bnbLogo,\n  CAKE: bnbLogo,\n  SUSD: bnbLogo,\n  SBTC: btcLogo,\n  BTCB: btcLogo,\n  BTC: btcLogo,\n  SVL: bnbLogo,\n  'BOMB-BNB-LP': bombFtmLpLogo,\n  'BOMB-BTCB-LP': bombFtmLpLogo,\n  '80BOMB-20BTCB-LP': bombFtmLpLogo,\n  'BSHARE-BOMB-LP': bombFtmLpLogo,\n  'BOMB-BSHARE-LP': bombFtmLpLogo,\n  'BUSM-BUSD-LP': busmBusdLpLogo,\n  'BSHARE-BNB-LP': bshareFtmLpLogo,\n  '80BSHARE-20WBNB-LP': bshareFtmLpLogo,\n  'BSHARE-BNB-APELP': bshareFtmLpLogo,\n  'BOMB-BTCB-APELP': bombFtmLpLogo\n};\n\nconst TokenSymbol = _ref => {\n  let {\n    symbol,\n    size = 64\n  } = _ref;\n\n  if (!logosBySymbol[symbol]) {\n    throw new Error(`Invalid Token Logo symbol: ${symbol}`);\n  }\n\n  return /*#__PURE__*/React.createElement(\"img\", {\n    src: logosBySymbol[symbol],\n    alt: `${symbol} Logo`,\n    width: size,\n    height: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default TokenSymbol;","map":{"version":3,"sources":["/home/shashwat/Projects/Dyeus/src/components/TokenSymbol/TokenSymbol.tsx"],"names":["React","bombLogo","tShareLogo","bombLogoPNG","xbombLogo","busmLogo","tShareLogoPNG","tBondLogo","bombFtmLpLogo","bshareFtmLpLogo","busmBusdLpLogo","bnbLogo","btcLogo","logosBySymbol","BOMB","BOMBPNG","BSHAREPNG","XBOMB","BSHARE","BBOND","BUSM","WBNB","BOO","SHIBA","ZOO","CAKE","SUSD","SBTC","BTCB","BTC","SVL","TokenSymbol","symbol","size","Error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AAGA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AAEA,MAAMC,aAAwC,GAAG;AAC/C;AACA;AACAC,EAAAA,IAAI,EAAEb,QAHyC;AAI/Cc,EAAAA,OAAO,EAAEZ,WAJsC;AAK/Ca,EAAAA,SAAS,EAAEV,aALoC;AAM/CW,EAAAA,KAAK,EAAEb,SANwC;AAO/Cc,EAAAA,MAAM,EAAEhB,UAPuC;AAQ/CiB,EAAAA,KAAK,EAAEZ,SARwC;AAS/Ca,EAAAA,IAAI,EAAEf,QATyC;AAU/CgB,EAAAA,IAAI,EAAEV,OAVyC;AAW/CW,EAAAA,GAAG,EAAEX,OAX0C;AAY/CY,EAAAA,KAAK,EAAEZ,OAZwC;AAa/Ca,EAAAA,GAAG,EAAEb,OAb0C;AAc/Cc,EAAAA,IAAI,EAAEd,OAdyC;AAe/Ce,EAAAA,IAAI,EAAEf,OAfyC;AAgB/CgB,EAAAA,IAAI,EAAEf,OAhByC;AAiB/CgB,EAAAA,IAAI,EAAEhB,OAjByC;AAkB/CiB,EAAAA,GAAG,EAAEjB,OAlB0C;AAmB/CkB,EAAAA,GAAG,EAAEnB,OAnB0C;AAoB/C,iBAAeH,aApBgC;AAqB/C,kBAAgBA,aArB+B;AAsB7C,sBAAoBA,aAtByB;AAwB/C,oBAAkBA,aAxB6B;AAyB/C,oBAAkBA,aAzB6B;AA0B/C,kBAAgBE,cA1B+B;AA4B/C,mBAAiBD,eA5B8B;AA6B7C,wBAAsBA,eA7BuB;AA8B/C,sBAAoBA,eA9B2B;AA+B/C,qBAAmBD;AA/B4B,CAAjD;;AAuCA,MAAMuB,WAAgC,GAAG,QAAyB;AAAA,MAAxB;AAACC,IAAAA,MAAD;AAASC,IAAAA,IAAI,GAAG;AAAhB,GAAwB;;AAChE,MAAI,CAACpB,aAAa,CAACmB,MAAD,CAAlB,EAA4B;AAC1B,UAAM,IAAIE,KAAJ,CAAW,8BAA6BF,MAAO,EAA/C,CAAN;AACD;;AACD,sBAAO;AAAK,IAAA,GAAG,EAAEnB,aAAa,CAACmB,MAAD,CAAvB;AAAiC,IAAA,GAAG,EAAG,GAAEA,MAAO,OAAhD;AAAwD,IAAA,KAAK,EAAEC,IAA/D;AAAqE,IAAA,MAAM,EAAEA,IAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CALD;;AAOA,eAAeF,WAAf","sourcesContent":["import React from 'react';\n\n//Graveyard ecosystem logos\nimport bombLogo from '../../assets/img/bomb.png';\nimport tShareLogo from '../../assets/img/bshares.png';\nimport bombLogoPNG from '../../assets/img/bomb.png';\nimport xbombLogo from '../../assets/img/xbomb.png';\nimport busmLogo from '../../assets/img/busm-256.png'\nimport tShareLogoPNG from '../../assets/img/bshares.png';\nimport tBondLogo from '../../assets/img/bbond.png';\n\nimport bombFtmLpLogo from '../../assets/img/bomb-bitcoin-LP.png';\nimport bshareFtmLpLogo from '../../assets/img/bshare-bnb-LP.png';\nimport busmBusdLpLogo from '../../assets/img/busm-busd-lp.png';\n\n\nimport bnbLogo from '../../assets/img/bnb.png';\nimport btcLogo from '../../assets/img/BCTB-icon.png';\n\nconst logosBySymbol: {[title: string]: string} = {\n  //Real tokens\n  //=====================\n  BOMB: bombLogo,\n  BOMBPNG: bombLogoPNG,\n  BSHAREPNG: tShareLogoPNG,\n  XBOMB: xbombLogo,\n  BSHARE: tShareLogo,\n  BBOND: tBondLogo,\n  BUSM: busmLogo,\n  WBNB: bnbLogo,\n  BOO: bnbLogo,\n  SHIBA: bnbLogo,\n  ZOO: bnbLogo,\n  CAKE: bnbLogo,\n  SUSD: bnbLogo,\n  SBTC: btcLogo,\n  BTCB: btcLogo,\n  BTC: btcLogo,\n  SVL: bnbLogo,\n  'BOMB-BNB-LP': bombFtmLpLogo,\n  'BOMB-BTCB-LP': bombFtmLpLogo,\n    '80BOMB-20BTCB-LP': bombFtmLpLogo,\n\n  'BSHARE-BOMB-LP': bombFtmLpLogo,\n  'BOMB-BSHARE-LP': bombFtmLpLogo,\n  'BUSM-BUSD-LP': busmBusdLpLogo,\n\n  'BSHARE-BNB-LP': bshareFtmLpLogo,\n    '80BSHARE-20WBNB-LP': bshareFtmLpLogo,\n  'BSHARE-BNB-APELP': bshareFtmLpLogo,\n  'BOMB-BTCB-APELP': bombFtmLpLogo,\n};\n\ntype LogoProps = {\n  symbol: string;\n  size?: number;\n};\n\nconst TokenSymbol: React.FC<LogoProps> = ({symbol, size = 64}) => {\n  if (!logosBySymbol[symbol]) {\n    throw new Error(`Invalid Token Logo symbol: ${symbol}`);\n  }\n  return <img src={logosBySymbol[symbol]} alt={`${symbol} Logo`} width={size} height={size} />;\n};\n\nexport default TokenSymbol;\n"]},"metadata":{},"sourceType":"module"}