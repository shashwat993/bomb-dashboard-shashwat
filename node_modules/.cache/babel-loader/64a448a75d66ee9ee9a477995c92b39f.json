{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers'; //import ERC20 from '../bomb-finance/ERC20';\n\nimport useBombFinance from './useBombFinance'; //import config from '../config';\n\nconst useBondsPurchasable = () => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  useEffect(() => {\n    async function fetchBondsPurchasable() {\n      try {\n        setBalance(await bombFinance.getBondsPurchasable());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetchBondsPurchasable();\n  }, [setBalance, bombFinance]);\n  return balance;\n};\n\nexport default useBondsPurchasable;","map":{"version":3,"sources":["/home/shashwat/Projects/Dyeus/src/hooks/useBondsPurchasable.ts"],"names":["useEffect","useState","BigNumber","useBombFinance","useBondsPurchasable","balance","setBalance","from","bombFinance","fetchBondsPurchasable","getBondsPurchasable","err","console","error"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,SAAR,QAAwB,QAAxB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACC,SAAS,CAACK,IAAV,CAAe,CAAf,CAAD,CAAtC;AACA,QAAMC,WAAW,GAAGL,cAAc,EAAlC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,qBAAf,GAAuC;AACrC,UAAI;AACFH,QAAAA,UAAU,CAAC,MAAME,WAAW,CAACE,mBAAZ,EAAP,CAAV;AACD,OAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF;;AACDF,IAAAA,qBAAqB;AACtB,GATQ,EASN,CAACH,UAAD,EAAaE,WAAb,CATM,CAAT;AAWA,SAAOH,OAAP;AACD,CAhBD;;AAkBA,eAAeD,mBAAf","sourcesContent":["import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\n//import ERC20 from '../bomb-finance/ERC20';\nimport useBombFinance from './useBombFinance';\n//import config from '../config';\n\nconst useBondsPurchasable = () => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchBondsPurchasable() {\n      try {\n        setBalance(await bombFinance.getBondsPurchasable());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchBondsPurchasable();\n  }, [setBalance, bombFinance]);\n\n  return balance;\n};\n\nexport default useBondsPurchasable;\n"]},"metadata":{},"sourceType":"module"}